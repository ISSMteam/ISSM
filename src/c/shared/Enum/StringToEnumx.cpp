/*
* \file StringToEnumx.cpp:
* \brief: output enum associated with string
*
*   WARNING: DO NOT MODIFY THIS FILE
*            this file has been automatically generated by Synchronize.sh
*            Please read README for more information
*/

#include <cstring>
#include "./Enum.h"
#include "../Exceptions/exceptions.h"

int  StringToEnumx(const char* name,bool notfounderror){

   int  stage=1;

   if(stage==1){
	      if (strcmp(name,"ParametersSTART")==0) return ParametersSTARTEnum;
	      else if (strcmp(name,"AdolcParam")==0) return AdolcParamEnum;
	      else if (strcmp(name,"AgeStabilization")==0) return AgeStabilizationEnum;
	      else if (strcmp(name,"AgeNumRequestedOutputs")==0) return AgeNumRequestedOutputsEnum;
	      else if (strcmp(name,"AgeRequestedOutputs")==0) return AgeRequestedOutputsEnum;
	      else if (strcmp(name,"AmrDeviatoricErrorGroupThreshold")==0) return AmrDeviatoricErrorGroupThresholdEnum;
	      else if (strcmp(name,"AmrDeviatoricErrorMaximum")==0) return AmrDeviatoricErrorMaximumEnum;
	      else if (strcmp(name,"AmrDeviatoricErrorResolution")==0) return AmrDeviatoricErrorResolutionEnum;
	      else if (strcmp(name,"AmrDeviatoricErrorThreshold")==0) return AmrDeviatoricErrorThresholdEnum;
	      else if (strcmp(name,"AmrErr")==0) return AmrErrEnum;
	      else if (strcmp(name,"AmrField")==0) return AmrFieldEnum;
	      else if (strcmp(name,"AmrGradation")==0) return AmrGradationEnum;
	      else if (strcmp(name,"AmrGroundingLineDistance")==0) return AmrGroundingLineDistanceEnum;
	      else if (strcmp(name,"AmrGroundingLineResolution")==0) return AmrGroundingLineResolutionEnum;
	      else if (strcmp(name,"AmrHmax")==0) return AmrHmaxEnum;
	      else if (strcmp(name,"AmrHmin")==0) return AmrHminEnum;
	      else if (strcmp(name,"AmrIceFrontDistance")==0) return AmrIceFrontDistanceEnum;
	      else if (strcmp(name,"AmrIceFrontResolution")==0) return AmrIceFrontResolutionEnum;
	      else if (strcmp(name,"AmrKeepMetric")==0) return AmrKeepMetricEnum;
	      else if (strcmp(name,"AmrLag")==0) return AmrLagEnum;
	      else if (strcmp(name,"AmrLevelMax")==0) return AmrLevelMaxEnum;
	      else if (strcmp(name,"AmrRestart")==0) return AmrRestartEnum;
	      else if (strcmp(name,"AmrThicknessErrorGroupThreshold")==0) return AmrThicknessErrorGroupThresholdEnum;
	      else if (strcmp(name,"AmrThicknessErrorMaximum")==0) return AmrThicknessErrorMaximumEnum;
	      else if (strcmp(name,"AmrThicknessErrorResolution")==0) return AmrThicknessErrorResolutionEnum;
	      else if (strcmp(name,"AmrThicknessErrorThreshold")==0) return AmrThicknessErrorThresholdEnum;
	      else if (strcmp(name,"AmrType")==0) return AmrTypeEnum;
	      else if (strcmp(name,"AnalysisCounter")==0) return AnalysisCounterEnum;
	      else if (strcmp(name,"AnalysisType")==0) return AnalysisTypeEnum;
	      else if (strcmp(name,"AugmentedLagrangianR")==0) return AugmentedLagrangianREnum;
	      else if (strcmp(name,"AugmentedLagrangianRholambda")==0) return AugmentedLagrangianRholambdaEnum;
	      else if (strcmp(name,"AugmentedLagrangianRhop")==0) return AugmentedLagrangianRhopEnum;
	      else if (strcmp(name,"AugmentedLagrangianRlambda")==0) return AugmentedLagrangianRlambdaEnum;
	      else if (strcmp(name,"AugmentedLagrangianTheta")==0) return AugmentedLagrangianThetaEnum;
	      else if (strcmp(name,"AutodiffCbufsize")==0) return AutodiffCbufsizeEnum;
	      else if (strcmp(name,"AutodiffDependentObjects")==0) return AutodiffDependentObjectsEnum;
	      else if (strcmp(name,"AutodiffDriver")==0) return AutodiffDriverEnum;
	      else if (strcmp(name,"AutodiffEnablePreaccumulation")==0) return AutodiffEnablePreaccumulationEnum;
	      else if (strcmp(name,"AutodiffFosForwardIndex")==0) return AutodiffFosForwardIndexEnum;
	      else if (strcmp(name,"AutodiffFosReverseIndex")==0) return AutodiffFosReverseIndexEnum;
	      else if (strcmp(name,"AutodiffFovForwardIndices")==0) return AutodiffFovForwardIndicesEnum;
	      else if (strcmp(name,"AutodiffGcTriggerMaxSize")==0) return AutodiffGcTriggerMaxSizeEnum;
	      else if (strcmp(name,"AutodiffGcTriggerRatio")==0) return AutodiffGcTriggerRatioEnum;
	      else if (strcmp(name,"AutodiffIsautodiff")==0) return AutodiffIsautodiffEnum;
	      else if (strcmp(name,"AutodiffLbufsize")==0) return AutodiffLbufsizeEnum;
	      else if (strcmp(name,"AutodiffNumDependents")==0) return AutodiffNumDependentsEnum;
	      else if (strcmp(name,"AutodiffNumIndependents")==0) return AutodiffNumIndependentsEnum;
	      else if (strcmp(name,"AutodiffObufsize")==0) return AutodiffObufsizeEnum;
	      else if (strcmp(name,"AutodiffOutputTapeMemory")==0) return AutodiffOutputTapeMemoryEnum;
	      else if (strcmp(name,"AutodiffOutputTime")==0) return AutodiffOutputTimeEnum;
	      else if (strcmp(name,"AutodiffTapeAlloc")==0) return AutodiffTapeAllocEnum;
	      else if (strcmp(name,"AutodiffTbufsize")==0) return AutodiffTbufsizeEnum;
	      else if (strcmp(name,"AutodiffXp")==0) return AutodiffXpEnum;
	      else if (strcmp(name,"BalancethicknessStabilization")==0) return BalancethicknessStabilizationEnum;
	      else if (strcmp(name,"BarystaticContributions")==0) return BarystaticContributionsEnum;
	      else if (strcmp(name,"BasalforcingsARMATimestep")==0) return BasalforcingsARMATimestepEnum;
	      else if (strcmp(name,"BasalforcingsARMAarOrder")==0) return BasalforcingsARMAarOrderEnum;
	      else if (strcmp(name,"BasalforcingsARMAmaOrder")==0) return BasalforcingsARMAmaOrderEnum;
	      else if (strcmp(name,"BasalforcingsBottomplumedepth")==0) return BasalforcingsBottomplumedepthEnum;
	      else if (strcmp(name,"BasalforcingsCrustthickness")==0) return BasalforcingsCrustthicknessEnum;
	      else if (strcmp(name,"BasalforcingsDeepwaterElevation")==0) return BasalforcingsDeepwaterElevationEnum;
	      else if (strcmp(name,"BasalforcingsDeepwaterMeltingRate")==0) return BasalforcingsDeepwaterMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsDtbg")==0) return BasalforcingsDtbgEnum;
	      else if (strcmp(name,"Basalforcings")==0) return BasalforcingsEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6AverageTf")==0) return BasalforcingsIsmip6AverageTfEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6BasinArea")==0) return BasalforcingsIsmip6BasinAreaEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6DeltaT")==0) return BasalforcingsIsmip6DeltaTEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6Gamma0")==0) return BasalforcingsIsmip6Gamma0Enum;
	      else if (strcmp(name,"BasalforcingsIsmip6IsLocal")==0) return BasalforcingsIsmip6IsLocalEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6NumBasins")==0) return BasalforcingsIsmip6NumBasinsEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6TfDepths")==0) return BasalforcingsIsmip6TfDepthsEnum;
	      else if (strcmp(name,"BasalforcingsLinearNumBasins")==0) return BasalforcingsLinearNumBasinsEnum;
	      else if (strcmp(name,"BasalforcingsLinearNumBreaks")==0) return BasalforcingsLinearNumBreaksEnum;
	      else if (strcmp(name,"BasalforcingsLinearNumParams")==0) return BasalforcingsLinearNumParamsEnum;
	      else if (strcmp(name,"BasalforcingsMantleconductivity")==0) return BasalforcingsMantleconductivityEnum;
	      else if (strcmp(name,"BasalforcingsNusselt")==0) return BasalforcingsNusseltEnum;
	      else if (strcmp(name,"BasalforcingsARMAarlagcoefs")==0) return BasalforcingsARMAarlagcoefsEnum;
	      else if (strcmp(name,"BasalforcingsARMAdatebreaks")==0) return BasalforcingsARMAdatebreaksEnum;
	      else if (strcmp(name,"BasalforcingsARMAmalagcoefs")==0) return BasalforcingsARMAmalagcoefsEnum;
	      else if (strcmp(name,"BasalforcingsARMApolyparams")==0) return BasalforcingsARMApolyparamsEnum;
	      else if (strcmp(name,"BasalforcingsIsThermalForcing")==0) return BasalforcingsIsThermalForcingEnum;
	      else if (strcmp(name,"BasalforcingsLowercrustheat")==0) return BasalforcingsLowercrustheatEnum;
	      else if (strcmp(name,"BasalforcingsPicoAverageOverturning")==0) return BasalforcingsPicoAverageOverturningEnum;
	      else if (strcmp(name,"BasalforcingsPicoAverageSalinity")==0) return BasalforcingsPicoAverageSalinityEnum;
	      else if (strcmp(name,"BasalforcingsPicoAverageTemperature")==0) return BasalforcingsPicoAverageTemperatureEnum;
	      else if (strcmp(name,"BasalforcingsPicoBoxArea")==0) return BasalforcingsPicoBoxAreaEnum;
	      else if (strcmp(name,"BasalforcingsPicoFarOceansalinity")==0) return BasalforcingsPicoFarOceansalinityEnum;
	      else if (strcmp(name,"BasalforcingsPicoFarOceantemperature")==0) return BasalforcingsPicoFarOceantemperatureEnum;
	      else if (strcmp(name,"BasalforcingsPicoGammaT")==0) return BasalforcingsPicoGammaTEnum;
	      else if (strcmp(name,"BasalforcingsPicoIsplume")==0) return BasalforcingsPicoIsplumeEnum;
	      else if (strcmp(name,"BasalforcingsPicoMaxboxcount")==0) return BasalforcingsPicoMaxboxcountEnum;
	      else if (strcmp(name,"BasalforcingsPicoNumBasins")==0) return BasalforcingsPicoNumBasinsEnum;
	      else if (strcmp(name,"BasalforcingsPlumeradius")==0) return BasalforcingsPlumeradiusEnum;
	      else if (strcmp(name,"BasalforcingsPlumex")==0) return BasalforcingsPlumexEnum;
	      else if (strcmp(name,"BasalforcingsPlumey")==0) return BasalforcingsPlumeyEnum;
	      else if (strcmp(name,"BasalforcingsThresholdThickness")==0) return BasalforcingsThresholdThicknessEnum;
	      else if (strcmp(name,"BasalforcingsTopplumedepth")==0) return BasalforcingsTopplumedepthEnum;
	      else if (strcmp(name,"BasalforcingsUppercrustheat")==0) return BasalforcingsUppercrustheatEnum;
	      else if (strcmp(name,"BasalforcingsUppercrustthickness")==0) return BasalforcingsUppercrustthicknessEnum;
	      else if (strcmp(name,"BasalforcingsUpperdepthMelt")==0) return BasalforcingsUpperdepthMeltEnum;
	      else if (strcmp(name,"BasalforcingsUpperwaterElevation")==0) return BasalforcingsUpperwaterElevationEnum;
	      else if (strcmp(name,"BasalforcingsUpperwaterMeltingRate")==0) return BasalforcingsUpperwaterMeltingRateEnum;
	      else if (strcmp(name,"CalvingADStressThresholdFloatingice")==0) return CalvingADStressThresholdFloatingiceEnum;
	      else if (strcmp(name,"CalvingADStressThresholdGroundedice")==0) return CalvingADStressThresholdGroundediceEnum;
	      else if (strcmp(name,"CalvingCrevasseDepth")==0) return CalvingCrevasseDepthEnum;
	      else if (strcmp(name,"CalvingCrevasseThreshold")==0) return CalvingCrevasseThresholdEnum;
	      else if (strcmp(name,"CalvingHeightAboveFloatation")==0) return CalvingHeightAboveFloatationEnum;
	      else if (strcmp(name,"CalvingLaw")==0) return CalvingLawEnum;
	      else if (strcmp(name,"CalvingMinthickness")==0) return CalvingMinthicknessEnum;
	      else if (strcmp(name,"CalvingTestSpeedfactor")==0) return CalvingTestSpeedfactorEnum;
	      else if (strcmp(name,"CalvingTestIndependentRate")==0) return CalvingTestIndependentRateEnum;
	      else if (strcmp(name,"CalvingUseParam")==0) return CalvingUseParamEnum;
	      else if (strcmp(name,"CalvingTheta")==0) return CalvingThetaEnum;
	      else if (strcmp(name,"CalvingAlpha")==0) return CalvingAlphaEnum;
	      else if (strcmp(name,"CalvingXoffset")==0) return CalvingXoffsetEnum;
	      else if (strcmp(name,"CalvingYoffset")==0) return CalvingYoffsetEnum;
	      else if (strcmp(name,"CalvingVelLowerbound")==0) return CalvingVelLowerboundEnum;
	      else if (strcmp(name,"CalvingVelMax")==0) return CalvingVelMaxEnum;
	      else if (strcmp(name,"CalvingVelThreshold")==0) return CalvingVelThresholdEnum;
	      else if (strcmp(name,"CalvingVelUpperbound")==0) return CalvingVelUpperboundEnum;
         else stage=2;
   }
   if(stage==2){
	      if (strcmp(name,"CalvingRc")==0) return CalvingRcEnum;
	      else if (strcmp(name,"CalvingNumberofBasins")==0) return CalvingNumberofBasinsEnum;
	      else if (strcmp(name,"ConfigurationType")==0) return ConfigurationTypeEnum;
	      else if (strcmp(name,"ConstantsG")==0) return ConstantsGEnum;
	      else if (strcmp(name,"ConstantsNewtonGravity")==0) return ConstantsNewtonGravityEnum;
	      else if (strcmp(name,"ConstantsReferencetemperature")==0) return ConstantsReferencetemperatureEnum;
	      else if (strcmp(name,"ConstantsYts")==0) return ConstantsYtsEnum;
	      else if (strcmp(name,"ControlInputSizeM")==0) return ControlInputSizeMEnum;
	      else if (strcmp(name,"ControlInputSizeN")==0) return ControlInputSizeNEnum;
	      else if (strcmp(name,"ControlInputInterpolation")==0) return ControlInputInterpolationEnum;
	      else if (strcmp(name,"CumBslc")==0) return CumBslcEnum;
	      else if (strcmp(name,"CumBslcIce")==0) return CumBslcIceEnum;
	      else if (strcmp(name,"CumBslcHydro")==0) return CumBslcHydroEnum;
	      else if (strcmp(name,"CumBslcOcean")==0) return CumBslcOceanEnum;
	      else if (strcmp(name,"CumBslcIcePartition")==0) return CumBslcIcePartitionEnum;
	      else if (strcmp(name,"CumBslcHydroPartition")==0) return CumBslcHydroPartitionEnum;
	      else if (strcmp(name,"CumBslcOceanPartition")==0) return CumBslcOceanPartitionEnum;
	      else if (strcmp(name,"CumGmtslc")==0) return CumGmtslcEnum;
	      else if (strcmp(name,"CumGmslc")==0) return CumGmslcEnum;
	      else if (strcmp(name,"DamageC1")==0) return DamageC1Enum;
	      else if (strcmp(name,"DamageC2")==0) return DamageC2Enum;
	      else if (strcmp(name,"DamageC3")==0) return DamageC3Enum;
	      else if (strcmp(name,"DamageC4")==0) return DamageC4Enum;
	      else if (strcmp(name,"Damage")==0) return DamageEnum;
	      else if (strcmp(name,"DamageEquivStress")==0) return DamageEquivStressEnum;
	      else if (strcmp(name,"DamageEvolutionNumRequestedOutputs")==0) return DamageEvolutionNumRequestedOutputsEnum;
	      else if (strcmp(name,"DamageEvolutionRequestedOutputs")==0) return DamageEvolutionRequestedOutputsEnum;
	      else if (strcmp(name,"DamageHealing")==0) return DamageHealingEnum;
	      else if (strcmp(name,"DamageKappa")==0) return DamageKappaEnum;
	      else if (strcmp(name,"DamageLaw")==0) return DamageLawEnum;
	      else if (strcmp(name,"DamageMaxDamage")==0) return DamageMaxDamageEnum;
	      else if (strcmp(name,"DamageStabilization")==0) return DamageStabilizationEnum;
	      else if (strcmp(name,"DamageStressThreshold")==0) return DamageStressThresholdEnum;
	      else if (strcmp(name,"DamageStressUBound")==0) return DamageStressUBoundEnum;
	      else if (strcmp(name,"DebrisMinThickness")==0) return DebrisMinThicknessEnum;
	      else if (strcmp(name,"DebrisNumRequestedOutputs")==0) return DebrisNumRequestedOutputsEnum;
	      else if (strcmp(name,"DebrisPenaltyFactor")==0) return DebrisPenaltyFactorEnum;
	      else if (strcmp(name,"DebrisRequestedOutputs")==0) return DebrisRequestedOutputsEnum;
	      else if (strcmp(name,"DebrisStabilization")==0) return DebrisStabilizationEnum;
	      else if (strcmp(name,"DebrisRemovalmodel")==0) return DebrisRemovalmodelEnum;
	      else if (strcmp(name,"DebrisDisplacementmodel")==0) return DebrisDisplacementmodelEnum;
	      else if (strcmp(name,"DebrisRemovalSlopeThreshold")==0) return DebrisRemovalSlopeThresholdEnum;
	      else if (strcmp(name,"DebrisRemovalStressThreshold")==0) return DebrisRemovalStressThresholdEnum;
	      else if (strcmp(name,"DebrisPackingFraction")==0) return DebrisPackingFractionEnum;
	      else if (strcmp(name,"DebugProfiling")==0) return DebugProfilingEnum;
	      else if (strcmp(name,"DomainDimension")==0) return DomainDimensionEnum;
	      else if (strcmp(name,"DomainType")==0) return DomainTypeEnum;
	      else if (strcmp(name,"DslModel")==0) return DslModelEnum;
	      else if (strcmp(name,"DslModelid")==0) return DslModelidEnum;
	      else if (strcmp(name,"DslNummodels")==0) return DslNummodelsEnum;
	      else if (strcmp(name,"SolidearthIsExternal")==0) return SolidearthIsExternalEnum;
	      else if (strcmp(name,"SolidearthExternalNature")==0) return SolidearthExternalNatureEnum;
	      else if (strcmp(name,"SolidearthExternalModelid")==0) return SolidearthExternalModelidEnum;
	      else if (strcmp(name,"SolidearthExternalNummodels")==0) return SolidearthExternalNummodelsEnum;
	      else if (strcmp(name,"SolidearthSettingsComputeBpGrd")==0) return SolidearthSettingsComputeBpGrdEnum;
	      else if (strcmp(name,"EarthId")==0) return EarthIdEnum;
	      else if (strcmp(name,"Elastic")==0) return ElasticEnum;
	      else if (strcmp(name,"EplZigZagCounter")==0) return EplZigZagCounterEnum;
	      else if (strcmp(name,"EsaHElastic")==0) return EsaHElasticEnum;
	      else if (strcmp(name,"EsaHemisphere")==0) return EsaHemisphereEnum;
	      else if (strcmp(name,"EsaRequestedOutputs")==0) return EsaRequestedOutputsEnum;
	      else if (strcmp(name,"EsaUElastic")==0) return EsaUElasticEnum;
	      else if (strcmp(name,"ExtrapolationVariable")==0) return ExtrapolationVariableEnum;
	      else if (strcmp(name,"FemModelComm")==0) return FemModelCommEnum;
	      else if (strcmp(name,"Fields")==0) return FieldsEnum;
	      else if (strcmp(name,"FlowequationFeFS")==0) return FlowequationFeFSEnum;
	      else if (strcmp(name,"FlowequationIsFS")==0) return FlowequationIsFSEnum;
	      else if (strcmp(name,"FlowequationIsHO")==0) return FlowequationIsHOEnum;
	      else if (strcmp(name,"FlowequationIsL1L2")==0) return FlowequationIsL1L2Enum;
	      else if (strcmp(name,"FlowequationIsMOLHO")==0) return FlowequationIsMOLHOEnum;
	      else if (strcmp(name,"FlowequationIsSIA")==0) return FlowequationIsSIAEnum;
	      else if (strcmp(name,"FlowequationIsSSA")==0) return FlowequationIsSSAEnum;
	      else if (strcmp(name,"FlowequationIsNitsche")==0) return FlowequationIsNitscheEnum;
	      else if (strcmp(name,"FeFSNitscheGamma")==0) return FeFSNitscheGammaEnum;
	      else if (strcmp(name,"FrictionCoupling")==0) return FrictionCouplingEnum;
	      else if (strcmp(name,"FrictionDelta")==0) return FrictionDeltaEnum;
	      else if (strcmp(name,"FrictionEffectivePressureLimit")==0) return FrictionEffectivePressureLimitEnum;
	      else if (strcmp(name,"FrictionF")==0) return FrictionFEnum;
	      else if (strcmp(name,"FrictionGamma")==0) return FrictionGammaEnum;
	      else if (strcmp(name,"FrictionLaw")==0) return FrictionLawEnum;
	      else if (strcmp(name,"FrictionLinearize")==0) return FrictionLinearizeEnum;
	      else if (strcmp(name,"FrictionPseudoplasticityExponent")==0) return FrictionPseudoplasticityExponentEnum;
	      else if (strcmp(name,"FrictionU0")==0) return FrictionU0Enum;
	      else if (strcmp(name,"FrictionThresholdSpeed")==0) return FrictionThresholdSpeedEnum;
	      else if (strcmp(name,"FrictionVoidRatio")==0) return FrictionVoidRatioEnum;
	      else if (strcmp(name,"FrontalForcingsBasinIcefrontArea")==0) return FrontalForcingsBasinIcefrontAreaEnum;
	      else if (strcmp(name,"FrontalForcingsARMATimestep")==0) return FrontalForcingsARMATimestepEnum;
	      else if (strcmp(name,"FrontalForcingsARMAarOrder")==0) return FrontalForcingsARMAarOrderEnum;
	      else if (strcmp(name,"FrontalForcingsARMAmaOrder")==0) return FrontalForcingsARMAmaOrderEnum;
	      else if (strcmp(name,"FrontalForcingsARMAdatebreaks")==0) return FrontalForcingsARMAdatebreaksEnum;
	      else if (strcmp(name,"FrontalForcingsARMAmonthdatebreaks")==0) return FrontalForcingsARMAmonthdatebreaksEnum;
	      else if (strcmp(name,"FrontalForcingsARMAmonthintercepts")==0) return FrontalForcingsARMAmonthinterceptsEnum;
	      else if (strcmp(name,"FrontalForcingsARMAmonthtrends")==0) return FrontalForcingsARMAmonthtrendsEnum;
	      else if (strcmp(name,"FrontalForcingsARMApolyparams")==0) return FrontalForcingsARMApolyparamsEnum;
	      else if (strcmp(name,"FrontalForcingsIsDischargeARMA")==0) return FrontalForcingsIsDischargeARMAEnum;
	      else if (strcmp(name,"FrontalForcingsNumberofBasins")==0) return FrontalForcingsNumberofBasinsEnum;
	      else if (strcmp(name,"FrontalForcingsNumberofBreaks")==0) return FrontalForcingsNumberofBreaksEnum;
	      else if (strcmp(name,"FrontalForcingsNumberofMonthBreaks")==0) return FrontalForcingsNumberofMonthBreaksEnum;
	      else if (strcmp(name,"FrontalForcingsNumberofParams")==0) return FrontalForcingsNumberofParamsEnum;
	      else if (strcmp(name,"FrontalForcingsParam")==0) return FrontalForcingsParamEnum;
	      else if (strcmp(name,"FrontalForcingsARMAarlagcoefs")==0) return FrontalForcingsARMAarlagcoefsEnum;
	      else if (strcmp(name,"FrontalForcingsARMAmalagcoefs")==0) return FrontalForcingsARMAmalagcoefsEnum;
	      else if (strcmp(name,"FrontalForcingsSdarlagcoefs")==0) return FrontalForcingsSdarlagcoefsEnum;
	      else if (strcmp(name,"FrontalForcingsSdARMATimestep")==0) return FrontalForcingsSdARMATimestepEnum;
	      else if (strcmp(name,"FrontalForcingsSdarOrder")==0) return FrontalForcingsSdarOrderEnum;
	      else if (strcmp(name,"FrontalForcingsSddatebreaks")==0) return FrontalForcingsSddatebreaksEnum;
	      else if (strcmp(name,"FrontalForcingsSdmalagcoefs")==0) return FrontalForcingsSdmalagcoefsEnum;
	      else if (strcmp(name,"FrontalForcingsSdmaOrder")==0) return FrontalForcingsSdmaOrderEnum;
	      else if (strcmp(name,"FrontalForcingsSdMonthlyFrac")==0) return FrontalForcingsSdMonthlyFracEnum;
	      else if (strcmp(name,"FrontalForcingsSdNumberofBreaks")==0) return FrontalForcingsSdNumberofBreaksEnum;
	      else if (strcmp(name,"FrontalForcingsSdNumberofParams")==0) return FrontalForcingsSdNumberofParamsEnum;
	      else if (strcmp(name,"FrontalForcingsSdpolyparams")==0) return FrontalForcingsSdpolyparamsEnum;
	      else if (strcmp(name,"GrdModel")==0) return GrdModelEnum;
	      else if (strcmp(name,"GroundinglineFrictionInterpolation")==0) return GroundinglineFrictionInterpolationEnum;
	      else if (strcmp(name,"GroundinglineIntrusionDistance")==0) return GroundinglineIntrusionDistanceEnum;
	      else if (strcmp(name,"GroundinglineMeltInterpolation")==0) return GroundinglineMeltInterpolationEnum;
	      else if (strcmp(name,"GroundinglineMigration")==0) return GroundinglineMigrationEnum;
	      else if (strcmp(name,"GroundinglineNumRequestedOutputs")==0) return GroundinglineNumRequestedOutputsEnum;
	      else if (strcmp(name,"GroundinglineRequestedOutputs")==0) return GroundinglineRequestedOutputsEnum;
	      else if (strcmp(name,"HydrologyarmaarOrder")==0) return HydrologyarmaarOrderEnum;
         else stage=3;
   }
   if(stage==3){
	      if (strcmp(name,"Hydrologyarmaarlagcoefs")==0) return HydrologyarmaarlagcoefsEnum;
	      else if (strcmp(name,"Hydrologyarmadatebreaks")==0) return HydrologyarmadatebreaksEnum;
	      else if (strcmp(name,"Hydrologyarmamalagcoefs")==0) return HydrologyarmamalagcoefsEnum;
	      else if (strcmp(name,"HydrologyarmamaOrder")==0) return HydrologyarmamaOrderEnum;
	      else if (strcmp(name,"HydrologyarmaMonthlyFactors")==0) return HydrologyarmaMonthlyFactorsEnum;
	      else if (strcmp(name,"HydrologyarmaNumBreaks")==0) return HydrologyarmaNumBreaksEnum;
	      else if (strcmp(name,"HydrologyarmaNumParams")==0) return HydrologyarmaNumParamsEnum;
	      else if (strcmp(name,"Hydrologyarmapolyparams")==0) return HydrologyarmapolyparamsEnum;
	      else if (strcmp(name,"HydrologyarmaTimestep")==0) return HydrologyarmaTimestepEnum;
	      else if (strcmp(name,"HydrologyAveraging")==0) return HydrologyAveragingEnum;
	      else if (strcmp(name,"HydrologyChannelAlpha")==0) return HydrologyChannelAlphaEnum;
	      else if (strcmp(name,"HydrologyChannelBeta")==0) return HydrologyChannelBetaEnum;
	      else if (strcmp(name,"HydrologyCavitySpacing")==0) return HydrologyCavitySpacingEnum;
	      else if (strcmp(name,"HydrologyChannelSheetWidth")==0) return HydrologyChannelSheetWidthEnum;
	      else if (strcmp(name,"HydrologyEnglacialVoidRatio")==0) return HydrologyEnglacialVoidRatioEnum;
	      else if (strcmp(name,"HydrologyIschannels")==0) return HydrologyIschannelsEnum;
	      else if (strcmp(name,"HydrologyIsIncludeSheetThickness")==0) return HydrologyIsIncludeSheetThicknessEnum;
	      else if (strcmp(name,"HydrologyCreepOpenFlag")==0) return HydrologyCreepOpenFlagEnum;
	      else if (strcmp(name,"HydrologyIsTransition")==0) return HydrologyIsTransitionEnum;
	      else if (strcmp(name,"HydrologyIsWaterPressureArma")==0) return HydrologyIsWaterPressureArmaEnum;
	      else if (strcmp(name,"HydrologyMeltFlag")==0) return HydrologyMeltFlagEnum;
	      else if (strcmp(name,"HydrologyModel")==0) return HydrologyModelEnum;
	      else if (strcmp(name,"HydrologyNumBasins")==0) return HydrologyNumBasinsEnum;
	      else if (strcmp(name,"HydrologyNumRequestedOutputs")==0) return HydrologyNumRequestedOutputsEnum;
	      else if (strcmp(name,"HydrologyOmega")==0) return HydrologyOmegaEnum;
	      else if (strcmp(name,"HydrologyPressureMeltCoefficient")==0) return HydrologyPressureMeltCoefficientEnum;
	      else if (strcmp(name,"HydrologyRelaxation")==0) return HydrologyRelaxationEnum;
	      else if (strcmp(name,"HydrologyRequestedOutputs")==0) return HydrologyRequestedOutputsEnum;
	      else if (strcmp(name,"HydrologySedimentKmax")==0) return HydrologySedimentKmaxEnum;
	      else if (strcmp(name,"HydrologySheetAlpha")==0) return HydrologySheetAlphaEnum;
	      else if (strcmp(name,"HydrologySheetBeta")==0) return HydrologySheetBetaEnum;
	      else if (strcmp(name,"HydrologyStepsPerStep")==0) return HydrologyStepsPerStepEnum;
	      else if (strcmp(name,"HydrologyStorage")==0) return HydrologyStorageEnum;
	      else if (strcmp(name,"HydrologydcEplColapseThickness")==0) return HydrologydcEplColapseThicknessEnum;
	      else if (strcmp(name,"HydrologydcEplConductivity")==0) return HydrologydcEplConductivityEnum;
	      else if (strcmp(name,"HydrologydcEplInitialThickness")==0) return HydrologydcEplInitialThicknessEnum;
	      else if (strcmp(name,"HydrologydcEplLayerCompressibility")==0) return HydrologydcEplLayerCompressibilityEnum;
	      else if (strcmp(name,"HydrologydcEplMaxThickness")==0) return HydrologydcEplMaxThicknessEnum;
	      else if (strcmp(name,"HydrologydcEplPoreWaterMass")==0) return HydrologydcEplPoreWaterMassEnum;
	      else if (strcmp(name,"HydrologydcEplThickComp")==0) return HydrologydcEplThickCompEnum;
	      else if (strcmp(name,"HydrologydcEplflipLock")==0) return HydrologydcEplflipLockEnum;
	      else if (strcmp(name,"HydrologydcIsefficientlayer")==0) return HydrologydcIsefficientlayerEnum;
	      else if (strcmp(name,"HydrologydcLeakageFactor")==0) return HydrologydcLeakageFactorEnum;
	      else if (strcmp(name,"HydrologydcMaxIter")==0) return HydrologydcMaxIterEnum;
	      else if (strcmp(name,"HydrologydcPenaltyFactor")==0) return HydrologydcPenaltyFactorEnum;
	      else if (strcmp(name,"HydrologydcPenaltyLock")==0) return HydrologydcPenaltyLockEnum;
	      else if (strcmp(name,"HydrologydcRelTol")==0) return HydrologydcRelTolEnum;
	      else if (strcmp(name,"HydrologydcSedimentlimit")==0) return HydrologydcSedimentlimitEnum;
	      else if (strcmp(name,"HydrologydcSedimentlimitFlag")==0) return HydrologydcSedimentlimitFlagEnum;
	      else if (strcmp(name,"HydrologydcSedimentLayerCompressibility")==0) return HydrologydcSedimentLayerCompressibilityEnum;
	      else if (strcmp(name,"HydrologydcSedimentPoreWaterMass")==0) return HydrologydcSedimentPoreWaterMassEnum;
	      else if (strcmp(name,"HydrologydcSedimentPorosity")==0) return HydrologydcSedimentPorosityEnum;
	      else if (strcmp(name,"HydrologydcSedimentThickness")==0) return HydrologydcSedimentThicknessEnum;
	      else if (strcmp(name,"HydrologyStepAdapt")==0) return HydrologyStepAdaptEnum;
	      else if (strcmp(name,"HydrologydcTransferFlag")==0) return HydrologydcTransferFlagEnum;
	      else if (strcmp(name,"HydrologydcUnconfinedFlag")==0) return HydrologydcUnconfinedFlagEnum;
	      else if (strcmp(name,"HydrologyshreveStabilization")==0) return HydrologyshreveStabilizationEnum;
	      else if (strcmp(name,"IcecapToEarthComm")==0) return IcecapToEarthCommEnum;
	      else if (strcmp(name,"Index")==0) return IndexEnum;
	      else if (strcmp(name,"InputFileName")==0) return InputFileNameEnum;
	      else if (strcmp(name,"DirectoryName")==0) return DirectoryNameEnum;
	      else if (strcmp(name,"Indices")==0) return IndicesEnum;
	      else if (strcmp(name,"InputToDepthaverageIn")==0) return InputToDepthaverageInEnum;
	      else if (strcmp(name,"InputToDepthaverageOut")==0) return InputToDepthaverageOutEnum;
	      else if (strcmp(name,"InputToExtrude")==0) return InputToExtrudeEnum;
	      else if (strcmp(name,"InputToL2Project")==0) return InputToL2ProjectEnum;
	      else if (strcmp(name,"InputToSmooth")==0) return InputToSmoothEnum;
	      else if (strcmp(name,"InversionAlgorithm")==0) return InversionAlgorithmEnum;
	      else if (strcmp(name,"InversionControlParameters")==0) return InversionControlParametersEnum;
	      else if (strcmp(name,"InversionControlScalingFactors")==0) return InversionControlScalingFactorsEnum;
	      else if (strcmp(name,"InversionCostFunctions")==0) return InversionCostFunctionsEnum;
	      else if (strcmp(name,"InversionDxmin")==0) return InversionDxminEnum;
	      else if (strcmp(name,"InversionDfminFrac")==0) return InversionDfminFracEnum;
	      else if (strcmp(name,"InversionGatol")==0) return InversionGatolEnum;
	      else if (strcmp(name,"InversionGradientScaling")==0) return InversionGradientScalingEnum;
	      else if (strcmp(name,"InversionGrtol")==0) return InversionGrtolEnum;
	      else if (strcmp(name,"InversionGttol")==0) return InversionGttolEnum;
	      else if (strcmp(name,"InversionIncompleteAdjoint")==0) return InversionIncompleteAdjointEnum;
	      else if (strcmp(name,"InversionIscontrol")==0) return InversionIscontrolEnum;
	      else if (strcmp(name,"InversionMaxiter")==0) return InversionMaxiterEnum;
	      else if (strcmp(name,"InversionMaxiterPerStep")==0) return InversionMaxiterPerStepEnum;
	      else if (strcmp(name,"InversionMaxsteps")==0) return InversionMaxstepsEnum;
	      else if (strcmp(name,"InversionNsteps")==0) return InversionNstepsEnum;
	      else if (strcmp(name,"InversionNumControlParameters")==0) return InversionNumControlParametersEnum;
	      else if (strcmp(name,"InversionNumCostFunctions")==0) return InversionNumCostFunctionsEnum;
	      else if (strcmp(name,"InversionStepThreshold")==0) return InversionStepThresholdEnum;
	      else if (strcmp(name,"InversionStopFlag")==0) return InversionStopFlagEnum;
	      else if (strcmp(name,"InversionType")==0) return InversionTypeEnum;
	      else if (strcmp(name,"IoConstant")==0) return IoConstantEnum;
	      else if (strcmp(name,"Ivins")==0) return IvinsEnum;
	      else if (strcmp(name,"IsSlcCoupling")==0) return IsSlcCouplingEnum;
	      else if (strcmp(name,"LevelsetKillIcebergs")==0) return LevelsetKillIcebergsEnum;
	      else if (strcmp(name,"LevelsetReinitFrequency")==0) return LevelsetReinitFrequencyEnum;
	      else if (strcmp(name,"LevelsetStabilization")==0) return LevelsetStabilizationEnum;
	      else if (strcmp(name,"LockFileName")==0) return LockFileNameEnum;
	      else if (strcmp(name,"LoveAllowLayerDeletion")==0) return LoveAllowLayerDeletionEnum;
	      else if (strcmp(name,"LoveChandlerWobble")==0) return LoveChandlerWobbleEnum;
	      else if (strcmp(name,"LoveCoreMantleBoundary")==0) return LoveCoreMantleBoundaryEnum;
	      else if (strcmp(name,"LoveEarthMass")==0) return LoveEarthMassEnum;
	      else if (strcmp(name,"LoveForcingType")==0) return LoveForcingTypeEnum;
	      else if (strcmp(name,"LoveFrequencies")==0) return LoveFrequenciesEnum;
	      else if (strcmp(name,"LoveIsTemporal")==0) return LoveIsTemporalEnum;
	      else if (strcmp(name,"LoveG0")==0) return LoveG0Enum;
	      else if (strcmp(name,"LoveGravitationalConstant")==0) return LoveGravitationalConstantEnum;
	      else if (strcmp(name,"LoveInnerCoreBoundary")==0) return LoveInnerCoreBoundaryEnum;
	      else if (strcmp(name,"LoveComplexComputation")==0) return LoveComplexComputationEnum;
	      else if (strcmp(name,"LoveQuadPrecision")==0) return LoveQuadPrecisionEnum;
	      else if (strcmp(name,"LoveIntStepsPerLayer")==0) return LoveIntStepsPerLayerEnum;
	      else if (strcmp(name,"LoveMinIntegrationSteps")==0) return LoveMinIntegrationStepsEnum;
	      else if (strcmp(name,"LoveMaxIntegrationdr")==0) return LoveMaxIntegrationdrEnum;
	      else if (strcmp(name,"LoveIntegrationScheme")==0) return LoveIntegrationSchemeEnum;
	      else if (strcmp(name,"LoveKernels")==0) return LoveKernelsEnum;
	      else if (strcmp(name,"LoveMu0")==0) return LoveMu0Enum;
	      else if (strcmp(name,"LoveNfreq")==0) return LoveNfreqEnum;
	      else if (strcmp(name,"LoveNTemporalIterations")==0) return LoveNTemporalIterationsEnum;
	      else if (strcmp(name,"LoveNYiEquations")==0) return LoveNYiEquationsEnum;
	      else if (strcmp(name,"LoveR0")==0) return LoveR0Enum;
	      else if (strcmp(name,"LoveShNmax")==0) return LoveShNmaxEnum;
	      else if (strcmp(name,"LoveShNmin")==0) return LoveShNminEnum;
	      else if (strcmp(name,"LoveStartingLayer")==0) return LoveStartingLayerEnum;
         else stage=4;
   }
   if(stage==4){
	      if (strcmp(name,"LoveUnderflowTol")==0) return LoveUnderflowTolEnum;
	      else if (strcmp(name,"LovePostWidderThreshold")==0) return LovePostWidderThresholdEnum;
	      else if (strcmp(name,"LoveDebug")==0) return LoveDebugEnum;
	      else if (strcmp(name,"LoveHypergeomNZ")==0) return LoveHypergeomNZEnum;
	      else if (strcmp(name,"LoveHypergeomNAlpha")==0) return LoveHypergeomNAlphaEnum;
	      else if (strcmp(name,"MassFluxSegments")==0) return MassFluxSegmentsEnum;
	      else if (strcmp(name,"MassFluxSegmentsPresent")==0) return MassFluxSegmentsPresentEnum;
	      else if (strcmp(name,"MasstransportHydrostaticAdjustment")==0) return MasstransportHydrostaticAdjustmentEnum;
	      else if (strcmp(name,"MasstransportIsfreesurface")==0) return MasstransportIsfreesurfaceEnum;
	      else if (strcmp(name,"MasstransportMinThickness")==0) return MasstransportMinThicknessEnum;
	      else if (strcmp(name,"MasstransportNumRequestedOutputs")==0) return MasstransportNumRequestedOutputsEnum;
	      else if (strcmp(name,"MasstransportPenaltyFactor")==0) return MasstransportPenaltyFactorEnum;
	      else if (strcmp(name,"MasstransportRequestedOutputs")==0) return MasstransportRequestedOutputsEnum;
	      else if (strcmp(name,"MasstransportStabilization")==0) return MasstransportStabilizationEnum;
	      else if (strcmp(name,"MaterialsBeta")==0) return MaterialsBetaEnum;
	      else if (strcmp(name,"MaterialsEarthDensity")==0) return MaterialsEarthDensityEnum;
	      else if (strcmp(name,"MaterialsEffectiveconductivityAveraging")==0) return MaterialsEffectiveconductivityAveragingEnum;
	      else if (strcmp(name,"MaterialsHeatcapacity")==0) return MaterialsHeatcapacityEnum;
	      else if (strcmp(name,"MaterialsLatentheat")==0) return MaterialsLatentheatEnum;
	      else if (strcmp(name,"MaterialsMeltingpoint")==0) return MaterialsMeltingpointEnum;
	      else if (strcmp(name,"MaterialsMixedLayerCapacity")==0) return MaterialsMixedLayerCapacityEnum;
	      else if (strcmp(name,"MaterialsMuWater")==0) return MaterialsMuWaterEnum;
	      else if (strcmp(name,"MaterialsRheologyLaw")==0) return MaterialsRheologyLawEnum;
	      else if (strcmp(name,"MaterialsRhoFreshwater")==0) return MaterialsRhoFreshwaterEnum;
	      else if (strcmp(name,"MaterialsRhoIce")==0) return MaterialsRhoIceEnum;
	      else if (strcmp(name,"MaterialsRhoSeawater")==0) return MaterialsRhoSeawaterEnum;
	      else if (strcmp(name,"MaterialsTemperateiceconductivity")==0) return MaterialsTemperateiceconductivityEnum;
	      else if (strcmp(name,"MaterialsThermalExchangeVelocity")==0) return MaterialsThermalExchangeVelocityEnum;
	      else if (strcmp(name,"MaterialsThermalconductivity")==0) return MaterialsThermalconductivityEnum;
	      else if (strcmp(name,"MeltingOffset")==0) return MeltingOffsetEnum;
	      else if (strcmp(name,"MeshAverageVertexConnectivity")==0) return MeshAverageVertexConnectivityEnum;
	      else if (strcmp(name,"MeshElementtype")==0) return MeshElementtypeEnum;
	      else if (strcmp(name,"MeshNumberoflayers")==0) return MeshNumberoflayersEnum;
	      else if (strcmp(name,"MeshNumberofvertices")==0) return MeshNumberofverticesEnum;
	      else if (strcmp(name,"MeshNumberofelements")==0) return MeshNumberofelementsEnum;
	      else if (strcmp(name,"MigrationMax")==0) return MigrationMaxEnum;
	      else if (strcmp(name,"ModelId")==0) return ModelIdEnum;
	      else if (strcmp(name,"Nbins")==0) return NbinsEnum;
	      else if (strcmp(name,"Nodes")==0) return NodesEnum;
	      else if (strcmp(name,"NumModels")==0) return NumModelsEnum;
	      else if (strcmp(name,"OceanGridNx")==0) return OceanGridNxEnum;
	      else if (strcmp(name,"OceanGridNy")==0) return OceanGridNyEnum;
	      else if (strcmp(name,"OceanGridX")==0) return OceanGridXEnum;
	      else if (strcmp(name,"OceanGridY")==0) return OceanGridYEnum;
	      else if (strcmp(name,"OutputBufferPointer")==0) return OutputBufferPointerEnum;
	      else if (strcmp(name,"OutputBufferSizePointer")==0) return OutputBufferSizePointerEnum;
	      else if (strcmp(name,"OutputFileName")==0) return OutputFileNameEnum;
	      else if (strcmp(name,"OutputFilePointer")==0) return OutputFilePointerEnum;
	      else if (strcmp(name,"Outputdefinition")==0) return OutputdefinitionEnum;
	      else if (strcmp(name,"QmuErrName")==0) return QmuErrNameEnum;
	      else if (strcmp(name,"QmuInName")==0) return QmuInNameEnum;
	      else if (strcmp(name,"QmuIsdakota")==0) return QmuIsdakotaEnum;
	      else if (strcmp(name,"QmuOutName")==0) return QmuOutNameEnum;
	      else if (strcmp(name,"QmuOutput")==0) return QmuOutputEnum;
	      else if (strcmp(name,"QmuCurrEvalId")==0) return QmuCurrEvalIdEnum;
	      else if (strcmp(name,"QmuNsample")==0) return QmuNsampleEnum;
	      else if (strcmp(name,"QmuResponsedescriptors")==0) return QmuResponsedescriptorsEnum;
	      else if (strcmp(name,"QmuVariableDescriptors")==0) return QmuVariableDescriptorsEnum;
	      else if (strcmp(name,"QmuVariablePartitions")==0) return QmuVariablePartitionsEnum;
	      else if (strcmp(name,"QmuVariablePartitionsNpart")==0) return QmuVariablePartitionsNpartEnum;
	      else if (strcmp(name,"QmuVariablePartitionsNt")==0) return QmuVariablePartitionsNtEnum;
	      else if (strcmp(name,"QmuResponsePartitions")==0) return QmuResponsePartitionsEnum;
	      else if (strcmp(name,"QmuResponsePartitionsNpart")==0) return QmuResponsePartitionsNpartEnum;
	      else if (strcmp(name,"QmuStatistics")==0) return QmuStatisticsEnum;
	      else if (strcmp(name,"QmuNumstatistics")==0) return QmuNumstatisticsEnum;
	      else if (strcmp(name,"QmuNdirectories")==0) return QmuNdirectoriesEnum;
	      else if (strcmp(name,"QmuNfilesPerDirectory")==0) return QmuNfilesPerDirectoryEnum;
	      else if (strcmp(name,"QmuStatisticsMethod")==0) return QmuStatisticsMethodEnum;
	      else if (strcmp(name,"QmuMethods")==0) return QmuMethodsEnum;
	      else if (strcmp(name,"RestartFileName")==0) return RestartFileNameEnum;
	      else if (strcmp(name,"Results")==0) return ResultsEnum;
	      else if (strcmp(name,"RootPath")==0) return RootPathEnum;
	      else if (strcmp(name,"Modelname")==0) return ModelnameEnum;
	      else if (strcmp(name,"SamplingAlpha")==0) return SamplingAlphaEnum;
	      else if (strcmp(name,"SamplingNumRequestedOutputs")==0) return SamplingNumRequestedOutputsEnum;
	      else if (strcmp(name,"SamplingRequestedOutputs")==0) return SamplingRequestedOutputsEnum;
	      else if (strcmp(name,"SamplingRobin")==0) return SamplingRobinEnum;
	      else if (strcmp(name,"SamplingSeed")==0) return SamplingSeedEnum;
	      else if (strcmp(name,"SaveResults")==0) return SaveResultsEnum;
	      else if (strcmp(name,"SolidearthPartitionIce")==0) return SolidearthPartitionIceEnum;
	      else if (strcmp(name,"SolidearthPartitionHydro")==0) return SolidearthPartitionHydroEnum;
	      else if (strcmp(name,"SolidearthPartitionOcean")==0) return SolidearthPartitionOceanEnum;
	      else if (strcmp(name,"SolidearthNpartIce")==0) return SolidearthNpartIceEnum;
	      else if (strcmp(name,"SolidearthNpartOcean")==0) return SolidearthNpartOceanEnum;
	      else if (strcmp(name,"SolidearthNpartHydro")==0) return SolidearthNpartHydroEnum;
	      else if (strcmp(name,"SolidearthPlanetRadius")==0) return SolidearthPlanetRadiusEnum;
	      else if (strcmp(name,"SolidearthPlanetArea")==0) return SolidearthPlanetAreaEnum;
	      else if (strcmp(name,"SolidearthSettingsAbstol")==0) return SolidearthSettingsAbstolEnum;
	      else if (strcmp(name,"SolidearthSettingsCrossSectionShape")==0) return SolidearthSettingsCrossSectionShapeEnum;
	      else if (strcmp(name,"SolidearthSettingsElastic")==0) return SolidearthSettingsElasticEnum;
	      else if (strcmp(name,"SolidearthSettingsViscous")==0) return SolidearthSettingsViscousEnum;
	      else if (strcmp(name,"SolidearthSettingsSatelliteGravi")==0) return SolidearthSettingsSatelliteGraviEnum;
	      else if (strcmp(name,"SolidearthSettingsDegreeAccuracy")==0) return SolidearthSettingsDegreeAccuracyEnum;
	      else if (strcmp(name,"SealevelchangeGeometryDone")==0) return SealevelchangeGeometryDoneEnum;
	      else if (strcmp(name,"SealevelchangeViscousNumSteps")==0) return SealevelchangeViscousNumStepsEnum;
	      else if (strcmp(name,"SealevelchangeViscousTimes")==0) return SealevelchangeViscousTimesEnum;
	      else if (strcmp(name,"SealevelchangeViscousIndex")==0) return SealevelchangeViscousIndexEnum;
	      else if (strcmp(name,"SealevelchangeViscousPolarMotion")==0) return SealevelchangeViscousPolarMotionEnum;
	      else if (strcmp(name,"SealevelchangeRunCount")==0) return SealevelchangeRunCountEnum;
	      else if (strcmp(name,"SealevelchangeTransitions")==0) return SealevelchangeTransitionsEnum;
	      else if (strcmp(name,"SealevelchangeRequestedOutputs")==0) return SealevelchangeRequestedOutputsEnum;
	      else if (strcmp(name,"RotationalAngularVelocity")==0) return RotationalAngularVelocityEnum;
	      else if (strcmp(name,"RotationalEquatorialMoi")==0) return RotationalEquatorialMoiEnum;
	      else if (strcmp(name,"RotationalPolarMoi")==0) return RotationalPolarMoiEnum;
	      else if (strcmp(name,"LovePolarMotionTransferFunctionColinear")==0) return LovePolarMotionTransferFunctionColinearEnum;
	      else if (strcmp(name,"LovePolarMotionTransferFunctionOrthogonal")==0) return LovePolarMotionTransferFunctionOrthogonalEnum;
	      else if (strcmp(name,"TidalLoveH")==0) return TidalLoveHEnum;
	      else if (strcmp(name,"TidalLoveK")==0) return TidalLoveKEnum;
	      else if (strcmp(name,"TidalLoveL")==0) return TidalLoveLEnum;
	      else if (strcmp(name,"TidalLoveK2Secular")==0) return TidalLoveK2SecularEnum;
	      else if (strcmp(name,"LoadLoveH")==0) return LoadLoveHEnum;
	      else if (strcmp(name,"LoadLoveK")==0) return LoadLoveKEnum;
	      else if (strcmp(name,"LoadLoveL")==0) return LoadLoveLEnum;
	      else if (strcmp(name,"LoveTimeFreq")==0) return LoveTimeFreqEnum;
	      else if (strcmp(name,"LoveIsTime")==0) return LoveIsTimeEnum;
	      else if (strcmp(name,"LoveHypergeomZ")==0) return LoveHypergeomZEnum;
	      else if (strcmp(name,"LoveHypergeomTable1")==0) return LoveHypergeomTable1Enum;
	      else if (strcmp(name,"LoveHypergeomTable2")==0) return LoveHypergeomTable2Enum;
	      else if (strcmp(name,"SealevelchangeGSelfAttraction")==0) return SealevelchangeGSelfAttractionEnum;
	      else if (strcmp(name,"SealevelchangeGViscoElastic")==0) return SealevelchangeGViscoElasticEnum;
         else stage=5;
   }
   if(stage==5){
	      if (strcmp(name,"SealevelchangeUViscoElastic")==0) return SealevelchangeUViscoElasticEnum;
	      else if (strcmp(name,"SealevelchangeHViscoElastic")==0) return SealevelchangeHViscoElasticEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionTransferFunctionColinear")==0) return SealevelchangePolarMotionTransferFunctionColinearEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionTransferFunctionOrthogonal")==0) return SealevelchangePolarMotionTransferFunctionOrthogonalEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionTransferFunctionZ")==0) return SealevelchangePolarMotionTransferFunctionZEnum;
	      else if (strcmp(name,"SealevelchangeTidalK2")==0) return SealevelchangeTidalK2Enum;
	      else if (strcmp(name,"SealevelchangeTidalH2")==0) return SealevelchangeTidalH2Enum;
	      else if (strcmp(name,"SealevelchangeTidalL2")==0) return SealevelchangeTidalL2Enum;
	      else if (strcmp(name,"SolidearthSettingsSealevelLoading")==0) return SolidearthSettingsSealevelLoadingEnum;
	      else if (strcmp(name,"SolidearthSettingsGRD")==0) return SolidearthSettingsGRDEnum;
	      else if (strcmp(name,"SolidearthSettingsRunFrequency")==0) return SolidearthSettingsRunFrequencyEnum;
	      else if (strcmp(name,"SolidearthSettingsTimeAcc")==0) return SolidearthSettingsTimeAccEnum;
	      else if (strcmp(name,"SolidearthSettingsHoriz")==0) return SolidearthSettingsHorizEnum;
	      else if (strcmp(name,"SolidearthSettingsMaxiter")==0) return SolidearthSettingsMaxiterEnum;
	      else if (strcmp(name,"SolidearthSettingsGrdOcean")==0) return SolidearthSettingsGrdOceanEnum;
	      else if (strcmp(name,"SolidearthSettingsOceanAreaScaling")==0) return SolidearthSettingsOceanAreaScalingEnum;
	      else if (strcmp(name,"StochasticForcingCovariance")==0) return StochasticForcingCovarianceEnum;
	      else if (strcmp(name,"StochasticForcingDefaultDimension")==0) return StochasticForcingDefaultDimensionEnum;
	      else if (strcmp(name,"StochasticForcingDimensions")==0) return StochasticForcingDimensionsEnum;
	      else if (strcmp(name,"StochasticForcingFields")==0) return StochasticForcingFieldsEnum;
	      else if (strcmp(name,"StochasticForcingIsEffectivePressure")==0) return StochasticForcingIsEffectivePressureEnum;
	      else if (strcmp(name,"StochasticForcingIsStochasticForcing")==0) return StochasticForcingIsStochasticForcingEnum;
	      else if (strcmp(name,"StochasticForcingIsWaterPressure")==0) return StochasticForcingIsWaterPressureEnum;
	      else if (strcmp(name,"StochasticForcingNoiseterms")==0) return StochasticForcingNoisetermsEnum;
	      else if (strcmp(name,"StochasticForcingNumFields")==0) return StochasticForcingNumFieldsEnum;
	      else if (strcmp(name,"StochasticForcingNumTimesCovariance")==0) return StochasticForcingNumTimesCovarianceEnum;
	      else if (strcmp(name,"StochasticForcingRandomflag")==0) return StochasticForcingRandomflagEnum;
	      else if (strcmp(name,"StochasticForcingTimeCovariance")==0) return StochasticForcingTimeCovarianceEnum;
	      else if (strcmp(name,"StochasticForcingTimestep")==0) return StochasticForcingTimestepEnum;
	      else if (strcmp(name,"SolidearthSettingsReltol")==0) return SolidearthSettingsReltolEnum;
	      else if (strcmp(name,"SolidearthSettingsSelfAttraction")==0) return SolidearthSettingsSelfAttractionEnum;
	      else if (strcmp(name,"SolidearthSettingsRotation")==0) return SolidearthSettingsRotationEnum;
	      else if (strcmp(name,"SolidearthSettingsMaxSHCoeff")==0) return SolidearthSettingsMaxSHCoeffEnum;
	      else if (strcmp(name,"SettingsIoGather")==0) return SettingsIoGatherEnum;
	      else if (strcmp(name,"SettingsNumResultsOnNodes")==0) return SettingsNumResultsOnNodesEnum;
	      else if (strcmp(name,"SettingsOutputFrequency")==0) return SettingsOutputFrequencyEnum;
	      else if (strcmp(name,"SettingsCheckpointFrequency")==0) return SettingsCheckpointFrequencyEnum;
	      else if (strcmp(name,"SettingsResultsOnNodes")==0) return SettingsResultsOnNodesEnum;
	      else if (strcmp(name,"SettingsSbCouplingFrequency")==0) return SettingsSbCouplingFrequencyEnum;
	      else if (strcmp(name,"SettingsSolverResidueThreshold")==0) return SettingsSolverResidueThresholdEnum;
	      else if (strcmp(name,"SettingsWaitonlock")==0) return SettingsWaitonlockEnum;
	      else if (strcmp(name,"SmbAIce")==0) return SmbAIceEnum;
	      else if (strcmp(name,"SmbAIdx")==0) return SmbAIdxEnum;
	      else if (strcmp(name,"SmbASnow")==0) return SmbASnowEnum;
	      else if (strcmp(name,"SmbAccualti")==0) return SmbAccualtiEnum;
	      else if (strcmp(name,"SmbAccugrad")==0) return SmbAccugradEnum;
	      else if (strcmp(name,"SmbAccuref")==0) return SmbAccurefEnum;
	      else if (strcmp(name,"SmbAdThresh")==0) return SmbAdThreshEnum;
	      else if (strcmp(name,"SmbAlbedoScheme")==0) return SmbAlbedoSchemeEnum;
	      else if (strcmp(name,"SmbAlbedoSnowMax")==0) return SmbAlbedoSnowMaxEnum;
	      else if (strcmp(name,"SmbAlbedoSnowMin")==0) return SmbAlbedoSnowMinEnum;
	      else if (strcmp(name,"SmbAlbedoIce")==0) return SmbAlbedoIceEnum;
	      else if (strcmp(name,"SmbAlbedoLand")==0) return SmbAlbedoLandEnum;
	      else if (strcmp(name,"SmbARMATimestep")==0) return SmbARMATimestepEnum;
	      else if (strcmp(name,"SmbARMAarOrder")==0) return SmbARMAarOrderEnum;
	      else if (strcmp(name,"SmbARMAarlagcoefs")==0) return SmbARMAarlagcoefsEnum;
	      else if (strcmp(name,"SmbARMAdatebreaks")==0) return SmbARMAdatebreaksEnum;
	      else if (strcmp(name,"SmbARMAmaOrder")==0) return SmbARMAmaOrderEnum;
	      else if (strcmp(name,"SmbARMAmalagcoefs")==0) return SmbARMAmalagcoefsEnum;
	      else if (strcmp(name,"SmbARMApolyparams")==0) return SmbARMApolyparamsEnum;
	      else if (strcmp(name,"SmbAveraging")==0) return SmbAveragingEnum;
	      else if (strcmp(name,"SmbDebrisalbedo")==0) return SmbDebrisalbedoEnum;
	      else if (strcmp(name,"SmbIcealbedo")==0) return SmbIcealbedoEnum;
	      else if (strcmp(name,"SmbSnowalbedo")==0) return SmbSnowalbedoEnum;
	      else if (strcmp(name,"SmbDebrisIsAnderson")==0) return SmbDebrisIsAndersonEnum;
	      else if (strcmp(name,"SmbDebrisIsCryokarst")==0) return SmbDebrisIsCryokarstEnum;
	      else if (strcmp(name,"SmbDebrisAndersonD0")==0) return SmbDebrisAndersonD0Enum;
	      else if (strcmp(name,"SmbDesfac")==0) return SmbDesfacEnum;
	      else if (strcmp(name,"SmbDesfacElev")==0) return SmbDesfacElevEnum;
	      else if (strcmp(name,"SmbDpermil")==0) return SmbDpermilEnum;
	      else if (strcmp(name,"SmbDsnowIdx")==0) return SmbDsnowIdxEnum;
	      else if (strcmp(name,"SmbElevationBins")==0) return SmbElevationBinsEnum;
	      else if (strcmp(name,"SmbCldFrac")==0) return SmbCldFracEnum;
	      else if (strcmp(name,"SmbDelta18o")==0) return SmbDelta18oEnum;
	      else if (strcmp(name,"SmbDelta18oSurface")==0) return SmbDelta18oSurfaceEnum;
	      else if (strcmp(name,"SmbDenIdx")==0) return SmbDenIdxEnum;
	      else if (strcmp(name,"SmbDt")==0) return SmbDtEnum;
	      else if (strcmp(name,"Smb")==0) return SmbEnum;
	      else if (strcmp(name,"SmbEIdx")==0) return SmbEIdxEnum;
	      else if (strcmp(name,"SmbF")==0) return SmbFEnum;
	      else if (strcmp(name,"SmbHumiditygrad")==0) return SmbHumiditygradEnum;
	      else if (strcmp(name,"SmbInitDensityScaling")==0) return SmbInitDensityScalingEnum;
	      else if (strcmp(name,"SmbIsaccumulation")==0) return SmbIsaccumulationEnum;
	      else if (strcmp(name,"SmbIsalbedo")==0) return SmbIsalbedoEnum;
	      else if (strcmp(name,"SmbIsconstrainsurfaceT")==0) return SmbIsconstrainsurfaceTEnum;
	      else if (strcmp(name,"SmbIsd18opd")==0) return SmbIsd18opdEnum;
	      else if (strcmp(name,"SmbIsdelta18o")==0) return SmbIsdelta18oEnum;
	      else if (strcmp(name,"SmbIsdensification")==0) return SmbIsdensificationEnum;
	      else if (strcmp(name,"SmbIsdeltaLWup")==0) return SmbIsdeltaLWupEnum;
	      else if (strcmp(name,"SmbIsfirnwarming")==0) return SmbIsfirnwarmingEnum;
	      else if (strcmp(name,"SmbIsgraingrowth")==0) return SmbIsgraingrowthEnum;
	      else if (strcmp(name,"SmbIsmelt")==0) return SmbIsmeltEnum;
	      else if (strcmp(name,"SmbIsmungsm")==0) return SmbIsmungsmEnum;
	      else if (strcmp(name,"SmbIsprecipscaled")==0) return SmbIsprecipscaledEnum;
	      else if (strcmp(name,"SmbIssetpddfac")==0) return SmbIssetpddfacEnum;
	      else if (strcmp(name,"SmbIsshortwave")==0) return SmbIsshortwaveEnum;
	      else if (strcmp(name,"SmbIstemperaturescaled")==0) return SmbIstemperaturescaledEnum;
	      else if (strcmp(name,"SmbIsthermal")==0) return SmbIsthermalEnum;
	      else if (strcmp(name,"SmbIsturbulentflux")==0) return SmbIsturbulentfluxEnum;
	      else if (strcmp(name,"SmbK")==0) return SmbKEnum;
	      else if (strcmp(name,"SmbLapseRates")==0) return SmbLapseRatesEnum;
	      else if (strcmp(name,"SmbLWgrad")==0) return SmbLWgradEnum;
	      else if (strcmp(name,"SmbNumBasins")==0) return SmbNumBasinsEnum;
	      else if (strcmp(name,"SmbNumBreaks")==0) return SmbNumBreaksEnum;
	      else if (strcmp(name,"SmbNumElevationBins")==0) return SmbNumElevationBinsEnum;
	      else if (strcmp(name,"SmbNumParams")==0) return SmbNumParamsEnum;
	      else if (strcmp(name,"SmbNumRequestedOutputs")==0) return SmbNumRequestedOutputsEnum;
	      else if (strcmp(name,"SmbPfac")==0) return SmbPfacEnum;
	      else if (strcmp(name,"SmbRdl")==0) return SmbRdlEnum;
	      else if (strcmp(name,"SmbRefElevation")==0) return SmbRefElevationEnum;
	      else if (strcmp(name,"SmbRequestedOutputs")==0) return SmbRequestedOutputsEnum;
	      else if (strcmp(name,"SmbRlaps")==0) return SmbRlapsEnum;
	      else if (strcmp(name,"SmbRlapslgm")==0) return SmbRlapslgmEnum;
	      else if (strcmp(name,"SmbRunoffalti")==0) return SmbRunoffaltiEnum;
	      else if (strcmp(name,"SmbRunoffgrad")==0) return SmbRunoffgradEnum;
	      else if (strcmp(name,"SmbRunoffref")==0) return SmbRunoffrefEnum;
	      else if (strcmp(name,"SmbSealev")==0) return SmbSealevEnum;
	      else if (strcmp(name,"SmbSemicMethod")==0) return SmbSemicMethodEnum;
	      else if (strcmp(name,"SmbSemicHcrit")==0) return SmbSemicHcritEnum;
	      else if (strcmp(name,"SmbSemicRcrit")==0) return SmbSemicRcritEnum;
         else stage=6;
   }
   if(stage==6){
	      if (strcmp(name,"SmbSemicWcrit")==0) return SmbSemicWcritEnum;
	      else if (strcmp(name,"SmbSemicMcrit")==0) return SmbSemicMcritEnum;
	      else if (strcmp(name,"SmbSemicAfac")==0) return SmbSemicAfacEnum;
	      else if (strcmp(name,"SmbSemicTauA")==0) return SmbSemicTauAEnum;
	      else if (strcmp(name,"SmbSemicTauF")==0) return SmbSemicTauFEnum;
	      else if (strcmp(name,"SmbSemicTmin")==0) return SmbSemicTminEnum;
	      else if (strcmp(name,"SmbSemicTmid")==0) return SmbSemicTmidEnum;
	      else if (strcmp(name,"SmbSemicTmax")==0) return SmbSemicTmaxEnum;
	      else if (strcmp(name,"SmbStepsPerStep")==0) return SmbStepsPerStepEnum;
	      else if (strcmp(name,"SmbSwIdx")==0) return SmbSwIdxEnum;
	      else if (strcmp(name,"SmbSWgrad")==0) return SmbSWgradEnum;
	      else if (strcmp(name,"SmbT0dry")==0) return SmbT0dryEnum;
	      else if (strcmp(name,"SmbT0wet")==0) return SmbT0wetEnum;
	      else if (strcmp(name,"SmbTcIdx")==0) return SmbTcIdxEnum;
	      else if (strcmp(name,"SmbTeThresh")==0) return SmbTeThreshEnum;
	      else if (strcmp(name,"SmbTdiff")==0) return SmbTdiffEnum;
	      else if (strcmp(name,"SmbThermoDeltaTScaling")==0) return SmbThermoDeltaTScalingEnum;
	      else if (strcmp(name,"SmbTemperaturesReconstructedYears")==0) return SmbTemperaturesReconstructedYearsEnum;
	      else if (strcmp(name,"SmbPrecipitationsReconstructedYears")==0) return SmbPrecipitationsReconstructedYearsEnum;
	      else if (strcmp(name,"SmbWindspeedgrad")==0) return SmbWindspeedgradEnum;
	      else if (strcmp(name,"SmoothThicknessMultiplier")==0) return SmoothThicknessMultiplierEnum;
	      else if (strcmp(name,"SolutionType")==0) return SolutionTypeEnum;
	      else if (strcmp(name,"SteadystateMaxiter")==0) return SteadystateMaxiterEnum;
	      else if (strcmp(name,"SteadystateNumRequestedOutputs")==0) return SteadystateNumRequestedOutputsEnum;
	      else if (strcmp(name,"SteadystateReltol")==0) return SteadystateReltolEnum;
	      else if (strcmp(name,"SteadystateRequestedOutputs")==0) return SteadystateRequestedOutputsEnum;
	      else if (strcmp(name,"Step")==0) return StepEnum;
	      else if (strcmp(name,"Steps")==0) return StepsEnum;
	      else if (strcmp(name,"StressbalanceAbstol")==0) return StressbalanceAbstolEnum;
	      else if (strcmp(name,"StressbalanceFSreconditioning")==0) return StressbalanceFSreconditioningEnum;
	      else if (strcmp(name,"StressbalanceIsHydrologyLayer")==0) return StressbalanceIsHydrologyLayerEnum;
	      else if (strcmp(name,"StressbalanceIsnewton")==0) return StressbalanceIsnewtonEnum;
	      else if (strcmp(name,"StressbalanceMaxiter")==0) return StressbalanceMaxiterEnum;
	      else if (strcmp(name,"StressbalanceNumRequestedOutputs")==0) return StressbalanceNumRequestedOutputsEnum;
	      else if (strcmp(name,"StressbalancePenaltyFactor")==0) return StressbalancePenaltyFactorEnum;
	      else if (strcmp(name,"StressbalanceReltol")==0) return StressbalanceReltolEnum;
	      else if (strcmp(name,"StressbalanceRequestedOutputs")==0) return StressbalanceRequestedOutputsEnum;
	      else if (strcmp(name,"StressbalanceRestol")==0) return StressbalanceRestolEnum;
	      else if (strcmp(name,"StressbalanceRiftPenaltyThreshold")==0) return StressbalanceRiftPenaltyThresholdEnum;
	      else if (strcmp(name,"StressbalanceShelfDampening")==0) return StressbalanceShelfDampeningEnum;
	      else if (strcmp(name,"ThermalForcingMonthlyEffects")==0) return ThermalForcingMonthlyEffectsEnum;
	      else if (strcmp(name,"ThermalIsdrainicecolumn")==0) return ThermalIsdrainicecolumnEnum;
	      else if (strcmp(name,"ThermalIsdynamicbasalspc")==0) return ThermalIsdynamicbasalspcEnum;
	      else if (strcmp(name,"ThermalIsenthalpy")==0) return ThermalIsenthalpyEnum;
	      else if (strcmp(name,"ThermalMaxiter")==0) return ThermalMaxiterEnum;
	      else if (strcmp(name,"ThermalNumRequestedOutputs")==0) return ThermalNumRequestedOutputsEnum;
	      else if (strcmp(name,"ThermalPenaltyFactor")==0) return ThermalPenaltyFactorEnum;
	      else if (strcmp(name,"ThermalPenaltyLock")==0) return ThermalPenaltyLockEnum;
	      else if (strcmp(name,"ThermalPenaltyThreshold")==0) return ThermalPenaltyThresholdEnum;
	      else if (strcmp(name,"ThermalReltol")==0) return ThermalReltolEnum;
	      else if (strcmp(name,"ThermalRequestedOutputs")==0) return ThermalRequestedOutputsEnum;
	      else if (strcmp(name,"ThermalStabilization")==0) return ThermalStabilizationEnum;
	      else if (strcmp(name,"ThermalWatercolumnUpperlimit")==0) return ThermalWatercolumnUpperlimitEnum;
	      else if (strcmp(name,"Time")==0) return TimeEnum;
	      else if (strcmp(name,"TimesteppingAverageForcing")==0) return TimesteppingAverageForcingEnum;
	      else if (strcmp(name,"TimesteppingCflCoefficient")==0) return TimesteppingCflCoefficientEnum;
	      else if (strcmp(name,"TimesteppingCouplingTime")==0) return TimesteppingCouplingTimeEnum;
	      else if (strcmp(name,"TimesteppingFinalTime")==0) return TimesteppingFinalTimeEnum;
	      else if (strcmp(name,"TimesteppingInterpForcing")==0) return TimesteppingInterpForcingEnum;
	      else if (strcmp(name,"TimesteppingCycleForcing")==0) return TimesteppingCycleForcingEnum;
	      else if (strcmp(name,"TimesteppingStartTime")==0) return TimesteppingStartTimeEnum;
	      else if (strcmp(name,"TimesteppingTimeStep")==0) return TimesteppingTimeStepEnum;
	      else if (strcmp(name,"TimesteppingTimeStepMax")==0) return TimesteppingTimeStepMaxEnum;
	      else if (strcmp(name,"TimesteppingTimeStepMin")==0) return TimesteppingTimeStepMinEnum;
	      else if (strcmp(name,"TimesteppingType")==0) return TimesteppingTypeEnum;
	      else if (strcmp(name,"ToMITgcmComm")==0) return ToMITgcmCommEnum;
	      else if (strcmp(name,"ToolkitsFileName")==0) return ToolkitsFileNameEnum;
	      else if (strcmp(name,"ToolkitsOptionsAnalyses")==0) return ToolkitsOptionsAnalysesEnum;
	      else if (strcmp(name,"ToolkitsOptionsStrings")==0) return ToolkitsOptionsStringsEnum;
	      else if (strcmp(name,"ToolkitsTypes")==0) return ToolkitsTypesEnum;
	      else if (strcmp(name,"TransientAmrFrequency")==0) return TransientAmrFrequencyEnum;
	      else if (strcmp(name,"TransientIsage")==0) return TransientIsageEnum;
	      else if (strcmp(name,"TransientIsdamageevolution")==0) return TransientIsdamageevolutionEnum;
	      else if (strcmp(name,"TransientIsdebris")==0) return TransientIsdebrisEnum;
	      else if (strcmp(name,"TransientIsesa")==0) return TransientIsesaEnum;
	      else if (strcmp(name,"TransientIsgia")==0) return TransientIsgiaEnum;
	      else if (strcmp(name,"TransientIsgroundingline")==0) return TransientIsgroundinglineEnum;
	      else if (strcmp(name,"TransientIshydrology")==0) return TransientIshydrologyEnum;
	      else if (strcmp(name,"TransientIsmasstransport")==0) return TransientIsmasstransportEnum;
	      else if (strcmp(name,"TransientIsoceantransport")==0) return TransientIsoceantransportEnum;
	      else if (strcmp(name,"TransientIsmovingfront")==0) return TransientIsmovingfrontEnum;
	      else if (strcmp(name,"TransientIsoceancoupling")==0) return TransientIsoceancouplingEnum;
	      else if (strcmp(name,"TransientIssampling")==0) return TransientIssamplingEnum;
	      else if (strcmp(name,"TransientIsslc")==0) return TransientIsslcEnum;
	      else if (strcmp(name,"TransientIssmb")==0) return TransientIssmbEnum;
	      else if (strcmp(name,"TransientIsstressbalance")==0) return TransientIsstressbalanceEnum;
	      else if (strcmp(name,"TransientIsthermal")==0) return TransientIsthermalEnum;
	      else if (strcmp(name,"TransientNumRequestedOutputs")==0) return TransientNumRequestedOutputsEnum;
	      else if (strcmp(name,"TransientRequestedOutputs")==0) return TransientRequestedOutputsEnum;
	      else if (strcmp(name,"Velocity")==0) return VelocityEnum;
	      else if (strcmp(name,"Xxe")==0) return XxeEnum;
	      else if (strcmp(name,"Yye")==0) return YyeEnum;
	      else if (strcmp(name,"Zze")==0) return ZzeEnum;
	      else if (strcmp(name,"Areae")==0) return AreaeEnum;
	      else if (strcmp(name,"WorldComm")==0) return WorldCommEnum;
	      else if (strcmp(name,"ParametersEND")==0) return ParametersENDEnum;
	      else if (strcmp(name,"InputsSTART")==0) return InputsSTARTEnum;
	      else if (strcmp(name,"AccumulatedDeltaBottomPressure")==0) return AccumulatedDeltaBottomPressureEnum;
	      else if (strcmp(name,"AccumulatedDeltaIceThickness")==0) return AccumulatedDeltaIceThicknessEnum;
	      else if (strcmp(name,"AccumulatedDeltaTws")==0) return AccumulatedDeltaTwsEnum;
	      else if (strcmp(name,"Adjoint")==0) return AdjointEnum;
	      else if (strcmp(name,"Adjointp")==0) return AdjointpEnum;
	      else if (strcmp(name,"Adjointx")==0) return AdjointxEnum;
	      else if (strcmp(name,"AdjointxBase")==0) return AdjointxBaseEnum;
	      else if (strcmp(name,"AdjointxShear")==0) return AdjointxShearEnum;
	      else if (strcmp(name,"Adjointy")==0) return AdjointyEnum;
	      else if (strcmp(name,"AdjointyBase")==0) return AdjointyBaseEnum;
	      else if (strcmp(name,"AdjointyShear")==0) return AdjointyShearEnum;
	      else if (strcmp(name,"Adjointz")==0) return AdjointzEnum;
	      else if (strcmp(name,"Age")==0) return AgeEnum;
	      else if (strcmp(name,"Air")==0) return AirEnum;
	      else if (strcmp(name,"Approximation")==0) return ApproximationEnum;
	      else if (strcmp(name,"BalancethicknessMisfit")==0) return BalancethicknessMisfitEnum;
	      else if (strcmp(name,"BalancethicknessOmega0")==0) return BalancethicknessOmega0Enum;
	      else if (strcmp(name,"BalancethicknessOmega")==0) return BalancethicknessOmegaEnum;
	      else if (strcmp(name,"BalancethicknessSpcthickness")==0) return BalancethicknessSpcthicknessEnum;
	      else if (strcmp(name,"BalancethicknessThickeningRate")==0) return BalancethicknessThickeningRateEnum;
	      else if (strcmp(name,"BasalCrevasse")==0) return BasalCrevasseEnum;
	      else if (strcmp(name,"BasalforcingsDeepwaterMeltingRatearma")==0) return BasalforcingsDeepwaterMeltingRatearmaEnum;
	      else if (strcmp(name,"BasalforcingsDeepwaterMeltingRateNoise")==0) return BasalforcingsDeepwaterMeltingRateNoiseEnum;
         else stage=7;
   }
   if(stage==7){
	      if (strcmp(name,"BasalforcingsDeepwaterMeltingRateValuesAutoregression")==0) return BasalforcingsDeepwaterMeltingRateValuesAutoregressionEnum;
	      else if (strcmp(name,"BasalforcingsDeepwaterMeltingRateValuesMovingaverage")==0) return BasalforcingsDeepwaterMeltingRateValuesMovingaverageEnum;
	      else if (strcmp(name,"BasalforcingsFloatingiceMeltingRate")==0) return BasalforcingsFloatingiceMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsFloatingiceMeltingRateObs")==0) return BasalforcingsFloatingiceMeltingRateObsEnum;
	      else if (strcmp(name,"BasalforcingsGeothermalflux")==0) return BasalforcingsGeothermalfluxEnum;
	      else if (strcmp(name,"BasalforcingsGroundediceMeltingRate")==0) return BasalforcingsGroundediceMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsGroundediceMeltingRateObs")==0) return BasalforcingsGroundediceMeltingRateObsEnum;
	      else if (strcmp(name,"BasalforcingsLinearBasinId")==0) return BasalforcingsLinearBasinIdEnum;
	      else if (strcmp(name,"BasalforcingsPerturbationMeltingRate")==0) return BasalforcingsPerturbationMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsSpatialDeepwaterElevation")==0) return BasalforcingsSpatialDeepwaterElevationEnum;
	      else if (strcmp(name,"BasalforcingsSpatialDeepwaterMeltingRate")==0) return BasalforcingsSpatialDeepwaterMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsSpatialUpperwaterElevation")==0) return BasalforcingsSpatialUpperwaterElevationEnum;
	      else if (strcmp(name,"BasalforcingsSpatialUpperwaterMeltingRate")==0) return BasalforcingsSpatialUpperwaterMeltingRateEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6BasinId")==0) return BasalforcingsIsmip6BasinIdEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6Tf")==0) return BasalforcingsIsmip6TfEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6TfShelf")==0) return BasalforcingsIsmip6TfShelfEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6MeltAnomaly")==0) return BasalforcingsIsmip6MeltAnomalyEnum;
	      else if (strcmp(name,"BasalforcingsMeltrateFactor")==0) return BasalforcingsMeltrateFactorEnum;
	      else if (strcmp(name,"BasalforcingsOceanSalinity")==0) return BasalforcingsOceanSalinityEnum;
	      else if (strcmp(name,"BasalforcingsOceanTemp")==0) return BasalforcingsOceanTempEnum;
	      else if (strcmp(name,"BasalforcingsPicoBasinId")==0) return BasalforcingsPicoBasinIdEnum;
	      else if (strcmp(name,"BasalforcingsPicoBoxId")==0) return BasalforcingsPicoBoxIdEnum;
	      else if (strcmp(name,"BasalforcingsPicoOverturningCoeff")==0) return BasalforcingsPicoOverturningCoeffEnum;
	      else if (strcmp(name,"BasalforcingsPicoSubShelfOceanOverturning")==0) return BasalforcingsPicoSubShelfOceanOverturningEnum;
	      else if (strcmp(name,"BasalforcingsPicoSubShelfOceanSalinity")==0) return BasalforcingsPicoSubShelfOceanSalinityEnum;
	      else if (strcmp(name,"BasalforcingsPicoSubShelfOceanTemp")==0) return BasalforcingsPicoSubShelfOceanTempEnum;
	      else if (strcmp(name,"BasalStressx")==0) return BasalStressxEnum;
	      else if (strcmp(name,"BasalStressy")==0) return BasalStressyEnum;
	      else if (strcmp(name,"BasalStress")==0) return BasalStressEnum;
	      else if (strcmp(name,"Base")==0) return BaseEnum;
	      else if (strcmp(name,"BaseOld")==0) return BaseOldEnum;
	      else if (strcmp(name,"BaseSlopeX")==0) return BaseSlopeXEnum;
	      else if (strcmp(name,"BaseSlopeY")==0) return BaseSlopeYEnum;
	      else if (strcmp(name,"BaselineBasalforcingsFloatingiceMeltingRate")==0) return BaselineBasalforcingsFloatingiceMeltingRateEnum;
	      else if (strcmp(name,"BaselineBasalforcingsSpatialDeepwaterMeltingRate")==0) return BaselineBasalforcingsSpatialDeepwaterMeltingRateEnum;
	      else if (strcmp(name,"BaselineCalvingCalvingrate")==0) return BaselineCalvingCalvingrateEnum;
	      else if (strcmp(name,"BaselineFrictionEffectivePressure")==0) return BaselineFrictionEffectivePressureEnum;
	      else if (strcmp(name,"BaselineSmbMassBalance")==0) return BaselineSmbMassBalanceEnum;
	      else if (strcmp(name,"Bed")==0) return BedEnum;
	      else if (strcmp(name,"BedGRD")==0) return BedGRDEnum;
	      else if (strcmp(name,"BedEast")==0) return BedEastEnum;
	      else if (strcmp(name,"BedEastGRD")==0) return BedEastGRDEnum;
	      else if (strcmp(name,"BedNorth")==0) return BedNorthEnum;
	      else if (strcmp(name,"BedNorthGRD")==0) return BedNorthGRDEnum;
	      else if (strcmp(name,"BedSlopeX")==0) return BedSlopeXEnum;
	      else if (strcmp(name,"BedSlopeY")==0) return BedSlopeYEnum;
	      else if (strcmp(name,"BottomPressure")==0) return BottomPressureEnum;
	      else if (strcmp(name,"BottomPressureOld")==0) return BottomPressureOldEnum;
	      else if (strcmp(name,"CalvingBasinId")==0) return CalvingBasinIdEnum;
	      else if (strcmp(name,"CalvingCalvingrate")==0) return CalvingCalvingrateEnum;
	      else if (strcmp(name,"CalvingHabFraction")==0) return CalvingHabFractionEnum;
	      else if (strcmp(name,"CalvingAblationrate")==0) return CalvingAblationrateEnum;
	      else if (strcmp(name,"CalvingMeltingrate")==0) return CalvingMeltingrateEnum;
	      else if (strcmp(name,"CalvingStressThresholdFloatingice")==0) return CalvingStressThresholdFloatingiceEnum;
	      else if (strcmp(name,"CalvingStressThresholdGroundedice")==0) return CalvingStressThresholdGroundediceEnum;
	      else if (strcmp(name,"CalvinglevermannCoeff")==0) return CalvinglevermannCoeffEnum;
	      else if (strcmp(name,"Calvingratex")==0) return CalvingratexEnum;
	      else if (strcmp(name,"Calvingratey")==0) return CalvingrateyEnum;
	      else if (strcmp(name,"CalvingFluxLevelset")==0) return CalvingFluxLevelsetEnum;
	      else if (strcmp(name,"CalvingMeltingFluxLevelset")==0) return CalvingMeltingFluxLevelsetEnum;
	      else if (strcmp(name,"Converged")==0) return ConvergedEnum;
	      else if (strcmp(name,"CrevasseDepth")==0) return CrevasseDepthEnum;
	      else if (strcmp(name,"DamageD")==0) return DamageDEnum;
	      else if (strcmp(name,"DamageDOld")==0) return DamageDOldEnum;
	      else if (strcmp(name,"DamageDbar")==0) return DamageDbarEnum;
	      else if (strcmp(name,"DamageDbarOld")==0) return DamageDbarOldEnum;
	      else if (strcmp(name,"DamageF")==0) return DamageFEnum;
	      else if (strcmp(name,"DebrisThickness")==0) return DebrisThicknessEnum;
	      else if (strcmp(name,"DegreeOfChannelization")==0) return DegreeOfChannelizationEnum;
	      else if (strcmp(name,"DepthBelowSurface")==0) return DepthBelowSurfaceEnum;
	      else if (strcmp(name,"DeltaIceThickness")==0) return DeltaIceThicknessEnum;
	      else if (strcmp(name,"DeltaTws")==0) return DeltaTwsEnum;
	      else if (strcmp(name,"DeltaBottomPressure")==0) return DeltaBottomPressureEnum;
	      else if (strcmp(name,"DeltaDsl")==0) return DeltaDslEnum;
	      else if (strcmp(name,"DslOld")==0) return DslOldEnum;
	      else if (strcmp(name,"Dsl")==0) return DslEnum;
	      else if (strcmp(name,"DeltaStr")==0) return DeltaStrEnum;
	      else if (strcmp(name,"StrOld")==0) return StrOldEnum;
	      else if (strcmp(name,"Str")==0) return StrEnum;
	      else if (strcmp(name,"DeviatoricStresseffective")==0) return DeviatoricStresseffectiveEnum;
	      else if (strcmp(name,"DeviatoricStressxx")==0) return DeviatoricStressxxEnum;
	      else if (strcmp(name,"DeviatoricStressxy")==0) return DeviatoricStressxyEnum;
	      else if (strcmp(name,"DeviatoricStressxz")==0) return DeviatoricStressxzEnum;
	      else if (strcmp(name,"DeviatoricStressyy")==0) return DeviatoricStressyyEnum;
	      else if (strcmp(name,"DeviatoricStressyz")==0) return DeviatoricStressyzEnum;
	      else if (strcmp(name,"DeviatoricStresszz")==0) return DeviatoricStresszzEnum;
	      else if (strcmp(name,"DeviatoricStress1")==0) return DeviatoricStress1Enum;
	      else if (strcmp(name,"DeviatoricStress2")==0) return DeviatoricStress2Enum;
	      else if (strcmp(name,"DistanceToCalvingfront")==0) return DistanceToCalvingfrontEnum;
	      else if (strcmp(name,"DistanceToGroundingline")==0) return DistanceToGroundinglineEnum;
	      else if (strcmp(name,"Domain2Dhorizontal")==0) return Domain2DhorizontalEnum;
	      else if (strcmp(name,"Domain2Dvertical")==0) return Domain2DverticalEnum;
	      else if (strcmp(name,"Domain3D")==0) return Domain3DEnum;
	      else if (strcmp(name,"DragCoefficientAbsGradient")==0) return DragCoefficientAbsGradientEnum;
	      else if (strcmp(name,"DrivingStressX")==0) return DrivingStressXEnum;
	      else if (strcmp(name,"DrivingStressY")==0) return DrivingStressYEnum;
	      else if (strcmp(name,"Dummy")==0) return DummyEnum;
	      else if (strcmp(name,"EffectivePressure")==0) return EffectivePressureEnum;
	      else if (strcmp(name,"EffectivePressureSubstep")==0) return EffectivePressureSubstepEnum;
	      else if (strcmp(name,"EffectivePressureTransient")==0) return EffectivePressureTransientEnum;
	      else if (strcmp(name,"Enthalpy")==0) return EnthalpyEnum;
	      else if (strcmp(name,"EnthalpyPicard")==0) return EnthalpyPicardEnum;
	      else if (strcmp(name,"EplHead")==0) return EplHeadEnum;
	      else if (strcmp(name,"EplHeadOld")==0) return EplHeadOldEnum;
	      else if (strcmp(name,"EplHeadSlopeX")==0) return EplHeadSlopeXEnum;
	      else if (strcmp(name,"EplHeadSlopeY")==0) return EplHeadSlopeYEnum;
	      else if (strcmp(name,"EplHeadSubstep")==0) return EplHeadSubstepEnum;
	      else if (strcmp(name,"EplHeadTransient")==0) return EplHeadTransientEnum;
	      else if (strcmp(name,"EsaEmotion")==0) return EsaEmotionEnum;
	      else if (strcmp(name,"EsaNmotion")==0) return EsaNmotionEnum;
	      else if (strcmp(name,"EsaRotationrate")==0) return EsaRotationrateEnum;
	      else if (strcmp(name,"EsaStrainratexx")==0) return EsaStrainratexxEnum;
	      else if (strcmp(name,"EsaStrainratexy")==0) return EsaStrainratexyEnum;
	      else if (strcmp(name,"EsaStrainrateyy")==0) return EsaStrainrateyyEnum;
	      else if (strcmp(name,"EsaUmotion")==0) return EsaUmotionEnum;
	      else if (strcmp(name,"EsaXmotion")==0) return EsaXmotionEnum;
	      else if (strcmp(name,"EsaYmotion")==0) return EsaYmotionEnum;
	      else if (strcmp(name,"EtaDiff")==0) return EtaDiffEnum;
	      else if (strcmp(name,"FlowequationBorderFS")==0) return FlowequationBorderFSEnum;
	      else if (strcmp(name,"FrictionAlpha2")==0) return FrictionAlpha2Enum;
         else stage=8;
   }
   if(stage==8){
	      if (strcmp(name,"FrictionAs")==0) return FrictionAsEnum;
	      else if (strcmp(name,"FrictionC")==0) return FrictionCEnum;
	      else if (strcmp(name,"FrictionCmax")==0) return FrictionCmaxEnum;
	      else if (strcmp(name,"FrictionCoefficient")==0) return FrictionCoefficientEnum;
	      else if (strcmp(name,"FrictionCoefficientcoulomb")==0) return FrictionCoefficientcoulombEnum;
	      else if (strcmp(name,"FrictionEffectivePressure")==0) return FrictionEffectivePressureEnum;
	      else if (strcmp(name,"FrictionK")==0) return FrictionKEnum;
	      else if (strcmp(name,"FrictionM")==0) return FrictionMEnum;
	      else if (strcmp(name,"FrictionP")==0) return FrictionPEnum;
	      else if (strcmp(name,"FrictionPressureAdjustedTemperature")==0) return FrictionPressureAdjustedTemperatureEnum;
	      else if (strcmp(name,"FrictionQ")==0) return FrictionQEnum;
	      else if (strcmp(name,"FrictionSedimentCompressibilityCoefficient")==0) return FrictionSedimentCompressibilityCoefficientEnum;
	      else if (strcmp(name,"FrictionTillFrictionAngle")==0) return FrictionTillFrictionAngleEnum;
	      else if (strcmp(name,"FrictionWaterLayer")==0) return FrictionWaterLayerEnum;
	      else if (strcmp(name,"FrictionWaterPressure")==0) return FrictionWaterPressureEnum;
	      else if (strcmp(name,"FrictionWaterPressureNoise")==0) return FrictionWaterPressureNoiseEnum;
	      else if (strcmp(name,"Frictionf")==0) return FrictionfEnum;
	      else if (strcmp(name,"FrontalForcingsBasinId")==0) return FrontalForcingsBasinIdEnum;
	      else if (strcmp(name,"FrontalForcingsSubglacialDischargearma")==0) return FrontalForcingsSubglacialDischargearmaEnum;
	      else if (strcmp(name,"FrontalForcingsSubglacialDischarge")==0) return FrontalForcingsSubglacialDischargeEnum;
	      else if (strcmp(name,"GeometryHydrostaticRatio")==0) return GeometryHydrostaticRatioEnum;
	      else if (strcmp(name,"NGia")==0) return NGiaEnum;
	      else if (strcmp(name,"NGiaRate")==0) return NGiaRateEnum;
	      else if (strcmp(name,"UGia")==0) return UGiaEnum;
	      else if (strcmp(name,"UGiaRate")==0) return UGiaRateEnum;
	      else if (strcmp(name,"Gradient")==0) return GradientEnum;
	      else if (strcmp(name,"GroundinglineHeight")==0) return GroundinglineHeightEnum;
	      else if (strcmp(name,"HydraulicPotential")==0) return HydraulicPotentialEnum;
	      else if (strcmp(name,"HydraulicPotentialOld")==0) return HydraulicPotentialOldEnum;
	      else if (strcmp(name,"HydrologyBasalFlux")==0) return HydrologyBasalFluxEnum;
	      else if (strcmp(name,"HydrologyBasinsId")==0) return HydrologyBasinsIdEnum;
	      else if (strcmp(name,"HydrologyBumpHeight")==0) return HydrologyBumpHeightEnum;
	      else if (strcmp(name,"HydrologyBumpSpacing")==0) return HydrologyBumpSpacingEnum;
	      else if (strcmp(name,"HydrologyChannelConductivity")==0) return HydrologyChannelConductivityEnum;
	      else if (strcmp(name,"HydrologydcBasalMoulinInput")==0) return HydrologydcBasalMoulinInputEnum;
	      else if (strcmp(name,"HydrologydcEplThickness")==0) return HydrologydcEplThicknessEnum;
	      else if (strcmp(name,"HydrologydcEplThicknessOld")==0) return HydrologydcEplThicknessOldEnum;
	      else if (strcmp(name,"HydrologydcEplThicknessSubstep")==0) return HydrologydcEplThicknessSubstepEnum;
	      else if (strcmp(name,"HydrologydcEplThicknessTransient")==0) return HydrologydcEplThicknessTransientEnum;
	      else if (strcmp(name,"HydrologydcMaskEplactiveElt")==0) return HydrologydcMaskEplactiveEltEnum;
	      else if (strcmp(name,"HydrologydcMaskEplactiveNode")==0) return HydrologydcMaskEplactiveNodeEnum;
	      else if (strcmp(name,"HydrologydcMaskThawedElt")==0) return HydrologydcMaskThawedEltEnum;
	      else if (strcmp(name,"HydrologydcMaskThawedNode")==0) return HydrologydcMaskThawedNodeEnum;
	      else if (strcmp(name,"HydrologydcSedimentTransmitivity")==0) return HydrologydcSedimentTransmitivityEnum;
	      else if (strcmp(name,"HydrologyDissipation")==0) return HydrologyDissipationEnum;
	      else if (strcmp(name,"HydrologyDrainageRate")==0) return HydrologyDrainageRateEnum;
	      else if (strcmp(name,"HydrologyEnglacialInput")==0) return HydrologyEnglacialInputEnum;
	      else if (strcmp(name,"HydrologyFrictionHeat")==0) return HydrologyFrictionHeatEnum;
	      else if (strcmp(name,"HydrologyGapHeight")==0) return HydrologyGapHeightEnum;
	      else if (strcmp(name,"HydrologyGapHeightX")==0) return HydrologyGapHeightXEnum;
	      else if (strcmp(name,"HydrologyGapHeightXX")==0) return HydrologyGapHeightXXEnum;
	      else if (strcmp(name,"HydrologyGapHeightY")==0) return HydrologyGapHeightYEnum;
	      else if (strcmp(name,"HydrologyGapHeightYY")==0) return HydrologyGapHeightYYEnum;
	      else if (strcmp(name,"HydrologyHead")==0) return HydrologyHeadEnum;
	      else if (strcmp(name,"HydrologyHeadOld")==0) return HydrologyHeadOldEnum;
	      else if (strcmp(name,"HydrologyMeltRate")==0) return HydrologyMeltRateEnum;
	      else if (strcmp(name,"HydrologyMoulinInput")==0) return HydrologyMoulinInputEnum;
	      else if (strcmp(name,"HydrologyNeumannflux")==0) return HydrologyNeumannfluxEnum;
	      else if (strcmp(name,"HydrologyPmpHeat")==0) return HydrologyPmpHeatEnum;
	      else if (strcmp(name,"HydrologyReynolds")==0) return HydrologyReynoldsEnum;
	      else if (strcmp(name,"HydrologyRheologyBBase")==0) return HydrologyRheologyBBaseEnum;
	      else if (strcmp(name,"HydrologySheetConductivity")==0) return HydrologySheetConductivityEnum;
	      else if (strcmp(name,"HydrologySheetDischarge")==0) return HydrologySheetDischargeEnum;
	      else if (strcmp(name,"HydrologySheetThickness")==0) return HydrologySheetThicknessEnum;
	      else if (strcmp(name,"HydrologySheetThicknessOld")==0) return HydrologySheetThicknessOldEnum;
	      else if (strcmp(name,"HydrologyTws")==0) return HydrologyTwsEnum;
	      else if (strcmp(name,"HydrologyTwsSpc")==0) return HydrologyTwsSpcEnum;
	      else if (strcmp(name,"HydrologyTwsAnalysis")==0) return HydrologyTwsAnalysisEnum;
	      else if (strcmp(name,"HydrologyWatercolumnMax")==0) return HydrologyWatercolumnMaxEnum;
	      else if (strcmp(name,"HydrologyWaterVx")==0) return HydrologyWaterVxEnum;
	      else if (strcmp(name,"HydrologyWaterVy")==0) return HydrologyWaterVyEnum;
	      else if (strcmp(name,"HydrologyMaskNodeActivation")==0) return HydrologyMaskNodeActivationEnum;
	      else if (strcmp(name,"DebrisMaskNodeActivation")==0) return DebrisMaskNodeActivationEnum;
	      else if (strcmp(name,"Ice")==0) return IceEnum;
	      else if (strcmp(name,"IceMaskNodeActivation")==0) return IceMaskNodeActivationEnum;
	      else if (strcmp(name,"Input")==0) return InputEnum;
	      else if (strcmp(name,"InversionCostFunctionsCoefficients")==0) return InversionCostFunctionsCoefficientsEnum;
	      else if (strcmp(name,"InversionSurfaceObs")==0) return InversionSurfaceObsEnum;
	      else if (strcmp(name,"InversionThicknessObs")==0) return InversionThicknessObsEnum;
	      else if (strcmp(name,"InversionVelObs")==0) return InversionVelObsEnum;
	      else if (strcmp(name,"InversionVxObs")==0) return InversionVxObsEnum;
	      else if (strcmp(name,"InversionVyObs")==0) return InversionVyObsEnum;
	      else if (strcmp(name,"LevelsetfunctionSlopeX")==0) return LevelsetfunctionSlopeXEnum;
	      else if (strcmp(name,"LevelsetfunctionSlopeY")==0) return LevelsetfunctionSlopeYEnum;
	      else if (strcmp(name,"LevelsetObservation")==0) return LevelsetObservationEnum;
	      else if (strcmp(name,"LoadingforceX")==0) return LoadingforceXEnum;
	      else if (strcmp(name,"LoadingforceY")==0) return LoadingforceYEnum;
	      else if (strcmp(name,"LoadingforceZ")==0) return LoadingforceZEnum;
	      else if (strcmp(name,"MaskOceanLevelset")==0) return MaskOceanLevelsetEnum;
	      else if (strcmp(name,"MaskIceLevelset")==0) return MaskIceLevelsetEnum;
	      else if (strcmp(name,"MaskIceRefLevelset")==0) return MaskIceRefLevelsetEnum;
	      else if (strcmp(name,"MasstransportSpcthickness")==0) return MasstransportSpcthicknessEnum;
	      else if (strcmp(name,"MaterialsRheologyB")==0) return MaterialsRheologyBEnum;
	      else if (strcmp(name,"MaterialsRheologyBbar")==0) return MaterialsRheologyBbarEnum;
	      else if (strcmp(name,"MaterialsRheologyE")==0) return MaterialsRheologyEEnum;
	      else if (strcmp(name,"MaterialsRheologyEbar")==0) return MaterialsRheologyEbarEnum;
	      else if (strcmp(name,"MaterialsRheologyEc")==0) return MaterialsRheologyEcEnum;
	      else if (strcmp(name,"MaterialsRheologyEcbar")==0) return MaterialsRheologyEcbarEnum;
	      else if (strcmp(name,"MaterialsRheologyEs")==0) return MaterialsRheologyEsEnum;
	      else if (strcmp(name,"MaterialsRheologyEsbar")==0) return MaterialsRheologyEsbarEnum;
	      else if (strcmp(name,"MaterialsRheologyN")==0) return MaterialsRheologyNEnum;
	      else if (strcmp(name,"MeshScaleFactor")==0) return MeshScaleFactorEnum;
	      else if (strcmp(name,"MeshVertexonbase")==0) return MeshVertexonbaseEnum;
	      else if (strcmp(name,"MeshVertexonboundary")==0) return MeshVertexonboundaryEnum;
	      else if (strcmp(name,"MeshVertexonsurface")==0) return MeshVertexonsurfaceEnum;
	      else if (strcmp(name,"Misfit")==0) return MisfitEnum;
	      else if (strcmp(name,"MovingFrontalVx")==0) return MovingFrontalVxEnum;
	      else if (strcmp(name,"MovingFrontalVy")==0) return MovingFrontalVyEnum;
	      else if (strcmp(name,"Neumannflux")==0) return NeumannfluxEnum;
	      else if (strcmp(name,"NewDamage")==0) return NewDamageEnum;
	      else if (strcmp(name,"Node")==0) return NodeEnum;
	      else if (strcmp(name,"OmegaAbsGradient")==0) return OmegaAbsGradientEnum;
	      else if (strcmp(name,"OceantransportSpcbottompressure")==0) return OceantransportSpcbottompressureEnum;
	      else if (strcmp(name,"OceantransportSpcstr")==0) return OceantransportSpcstrEnum;
	      else if (strcmp(name,"OceantransportSpcdsl")==0) return OceantransportSpcdslEnum;
	      else if (strcmp(name,"P0")==0) return P0Enum;
	      else if (strcmp(name,"P1")==0) return P1Enum;
	      else if (strcmp(name,"Partitioning")==0) return PartitioningEnum;
	      else if (strcmp(name,"Pressure")==0) return PressureEnum;
	      else if (strcmp(name,"Radar")==0) return RadarEnum;
         else stage=9;
   }
   if(stage==9){
	      if (strcmp(name,"RadarAttenuationMacGregor")==0) return RadarAttenuationMacGregorEnum;
	      else if (strcmp(name,"RadarAttenuationWolff")==0) return RadarAttenuationWolffEnum;
	      else if (strcmp(name,"RadarIcePeriod")==0) return RadarIcePeriodEnum;
	      else if (strcmp(name,"RadarPowerMacGregor")==0) return RadarPowerMacGregorEnum;
	      else if (strcmp(name,"RadarPowerWolff")==0) return RadarPowerWolffEnum;
	      else if (strcmp(name,"RheologyBAbsGradient")==0) return RheologyBAbsGradientEnum;
	      else if (strcmp(name,"RheologyBInitialguess")==0) return RheologyBInitialguessEnum;
	      else if (strcmp(name,"RheologyBInitialguessMisfit")==0) return RheologyBInitialguessMisfitEnum;
	      else if (strcmp(name,"RheologyBbarAbsGradient")==0) return RheologyBbarAbsGradientEnum;
	      else if (strcmp(name,"Sample")==0) return SampleEnum;
	      else if (strcmp(name,"SampleOld")==0) return SampleOldEnum;
	      else if (strcmp(name,"SampleNoise")==0) return SampleNoiseEnum;
	      else if (strcmp(name,"SamplingBeta")==0) return SamplingBetaEnum;
	      else if (strcmp(name,"SamplingKappa")==0) return SamplingKappaEnum;
	      else if (strcmp(name,"SamplingPhi")==0) return SamplingPhiEnum;
	      else if (strcmp(name,"SamplingTau")==0) return SamplingTauEnum;
	      else if (strcmp(name,"Sealevel")==0) return SealevelEnum;
	      else if (strcmp(name,"SealevelGRD")==0) return SealevelGRDEnum;
	      else if (strcmp(name,"SatGraviGRD")==0) return SatGraviGRDEnum;
	      else if (strcmp(name,"SealevelBarystaticMask")==0) return SealevelBarystaticMaskEnum;
	      else if (strcmp(name,"SealevelBarystaticIceMask")==0) return SealevelBarystaticIceMaskEnum;
	      else if (strcmp(name,"SealevelBarystaticIceWeights")==0) return SealevelBarystaticIceWeightsEnum;
	      else if (strcmp(name,"SealevelBarystaticIceArea")==0) return SealevelBarystaticIceAreaEnum;
	      else if (strcmp(name,"SealevelBarystaticIceLatbar")==0) return SealevelBarystaticIceLatbarEnum;
	      else if (strcmp(name,"SealevelBarystaticIceLongbar")==0) return SealevelBarystaticIceLongbarEnum;
	      else if (strcmp(name,"SealevelBarystaticIceLoad")==0) return SealevelBarystaticIceLoadEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroMask")==0) return SealevelBarystaticHydroMaskEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroWeights")==0) return SealevelBarystaticHydroWeightsEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroArea")==0) return SealevelBarystaticHydroAreaEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroLatbar")==0) return SealevelBarystaticHydroLatbarEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroLongbar")==0) return SealevelBarystaticHydroLongbarEnum;
	      else if (strcmp(name,"SealevelBarystaticHydroLoad")==0) return SealevelBarystaticHydroLoadEnum;
	      else if (strcmp(name,"SealevelBarystaticBpMask")==0) return SealevelBarystaticBpMaskEnum;
	      else if (strcmp(name,"SealevelBarystaticBpWeights")==0) return SealevelBarystaticBpWeightsEnum;
	      else if (strcmp(name,"SealevelBarystaticBpArea")==0) return SealevelBarystaticBpAreaEnum;
	      else if (strcmp(name,"SealevelBarystaticBpLoad")==0) return SealevelBarystaticBpLoadEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanMask")==0) return SealevelBarystaticOceanMaskEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanWeights")==0) return SealevelBarystaticOceanWeightsEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanArea")==0) return SealevelBarystaticOceanAreaEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanLatbar")==0) return SealevelBarystaticOceanLatbarEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanLongbar")==0) return SealevelBarystaticOceanLongbarEnum;
	      else if (strcmp(name,"SealevelBarystaticOceanLoad")==0) return SealevelBarystaticOceanLoadEnum;
	      else if (strcmp(name,"SealevelNEsa")==0) return SealevelNEsaEnum;
	      else if (strcmp(name,"SealevelNEsaRate")==0) return SealevelNEsaRateEnum;
	      else if (strcmp(name,"SealevelRSL")==0) return SealevelRSLEnum;
	      else if (strcmp(name,"Bslc")==0) return BslcEnum;
	      else if (strcmp(name,"BslcIce")==0) return BslcIceEnum;
	      else if (strcmp(name,"BslcHydro")==0) return BslcHydroEnum;
	      else if (strcmp(name,"BslcOcean")==0) return BslcOceanEnum;
	      else if (strcmp(name,"BslcRate")==0) return BslcRateEnum;
	      else if (strcmp(name,"Gmtslc")==0) return GmtslcEnum;
	      else if (strcmp(name,"SealevelRSLBarystatic")==0) return SealevelRSLBarystaticEnum;
	      else if (strcmp(name,"SealevelRSLRate")==0) return SealevelRSLRateEnum;
	      else if (strcmp(name,"SealevelUGrd")==0) return SealevelUGrdEnum;
	      else if (strcmp(name,"SealevelNGrd")==0) return SealevelNGrdEnum;
	      else if (strcmp(name,"SealevelUEastEsa")==0) return SealevelUEastEsaEnum;
	      else if (strcmp(name,"SealevelUNorthEsa")==0) return SealevelUNorthEsaEnum;
	      else if (strcmp(name,"SealevelchangeIndices")==0) return SealevelchangeIndicesEnum;
	      else if (strcmp(name,"SealevelchangeConvolutionVertices")==0) return SealevelchangeConvolutionVerticesEnum;
	      else if (strcmp(name,"SealevelchangeAlphaIndex")==0) return SealevelchangeAlphaIndexEnum;
	      else if (strcmp(name,"SealevelchangeAzimuthIndex")==0) return SealevelchangeAzimuthIndexEnum;
	      else if (strcmp(name,"SealevelchangeGrot")==0) return SealevelchangeGrotEnum;
	      else if (strcmp(name,"SealevelchangeGSatGravirot")==0) return SealevelchangeGSatGravirotEnum;
	      else if (strcmp(name,"SealevelchangeGUrot")==0) return SealevelchangeGUrotEnum;
	      else if (strcmp(name,"SealevelchangeGNrot")==0) return SealevelchangeGNrotEnum;
	      else if (strcmp(name,"SealevelchangeGErot")==0) return SealevelchangeGErotEnum;
	      else if (strcmp(name,"SealevelchangeAlphaIndexOcean")==0) return SealevelchangeAlphaIndexOceanEnum;
	      else if (strcmp(name,"SealevelchangeAlphaIndexIce")==0) return SealevelchangeAlphaIndexIceEnum;
	      else if (strcmp(name,"SealevelchangeAlphaIndexHydro")==0) return SealevelchangeAlphaIndexHydroEnum;
	      else if (strcmp(name,"SealevelchangeAzimuthIndexOcean")==0) return SealevelchangeAzimuthIndexOceanEnum;
	      else if (strcmp(name,"SealevelchangeAzimuthIndexIce")==0) return SealevelchangeAzimuthIndexIceEnum;
	      else if (strcmp(name,"SealevelchangeAzimuthIndexHydro")==0) return SealevelchangeAzimuthIndexHydroEnum;
	      else if (strcmp(name,"SealevelchangeViscousRSL")==0) return SealevelchangeViscousRSLEnum;
	      else if (strcmp(name,"SealevelchangeViscousSG")==0) return SealevelchangeViscousSGEnum;
	      else if (strcmp(name,"SealevelchangeViscousU")==0) return SealevelchangeViscousUEnum;
	      else if (strcmp(name,"SealevelchangeViscousN")==0) return SealevelchangeViscousNEnum;
	      else if (strcmp(name,"SealevelchangeViscousE")==0) return SealevelchangeViscousEEnum;
	      else if (strcmp(name,"CouplingTransferCount")==0) return CouplingTransferCountEnum;
	      else if (strcmp(name,"SedimentHead")==0) return SedimentHeadEnum;
	      else if (strcmp(name,"SedimentHeadOld")==0) return SedimentHeadOldEnum;
	      else if (strcmp(name,"SedimentHeadSubstep")==0) return SedimentHeadSubstepEnum;
	      else if (strcmp(name,"SedimentHeadTransient")==0) return SedimentHeadTransientEnum;
	      else if (strcmp(name,"SedimentHeadResidual")==0) return SedimentHeadResidualEnum;
	      else if (strcmp(name,"SedimentHeadStacked")==0) return SedimentHeadStackedEnum;
	      else if (strcmp(name,"SigmaNN")==0) return SigmaNNEnum;
	      else if (strcmp(name,"SigmaVM")==0) return SigmaVMEnum;
	      else if (strcmp(name,"SmbAccumulatedEC")==0) return SmbAccumulatedECEnum;
	      else if (strcmp(name,"SmbAccumulatedMassBalance")==0) return SmbAccumulatedMassBalanceEnum;
	      else if (strcmp(name,"SmbAccumulatedMelt")==0) return SmbAccumulatedMeltEnum;
	      else if (strcmp(name,"SmbAccumulatedPrecipitation")==0) return SmbAccumulatedPrecipitationEnum;
	      else if (strcmp(name,"SmbAccumulatedRain")==0) return SmbAccumulatedRainEnum;
	      else if (strcmp(name,"SmbAccumulatedRefreeze")==0) return SmbAccumulatedRefreezeEnum;
	      else if (strcmp(name,"SmbAccumulatedRunoff")==0) return SmbAccumulatedRunoffEnum;
	      else if (strcmp(name,"SmbAccumulatedECSubstep")==0) return SmbAccumulatedECSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedMassBalanceSubstep")==0) return SmbAccumulatedMassBalanceSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedMeltSubstep")==0) return SmbAccumulatedMeltSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedPrecipitationSubstep")==0) return SmbAccumulatedPrecipitationSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedRainSubstep")==0) return SmbAccumulatedRainSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedRefreezeSubstep")==0) return SmbAccumulatedRefreezeSubstepEnum;
	      else if (strcmp(name,"SmbAccumulatedRunoffSubstep")==0) return SmbAccumulatedRunoffSubstepEnum;
	      else if (strcmp(name,"SmbAlbedo")==0) return SmbAlbedoEnum;
	      else if (strcmp(name,"SmbAlbedoInit")==0) return SmbAlbedoInitEnum;
	      else if (strcmp(name,"SmbAlbedoSnow")==0) return SmbAlbedoSnowEnum;
	      else if (strcmp(name,"SmbAlbedoSnowInit")==0) return SmbAlbedoSnowInitEnum;
	      else if (strcmp(name,"SmbA")==0) return SmbAEnum;
	      else if (strcmp(name,"SmbAdiff")==0) return SmbAdiffEnum;
	      else if (strcmp(name,"SmbAValue")==0) return SmbAValueEnum;
	      else if (strcmp(name,"SmbAccumulation")==0) return SmbAccumulationEnum;
	      else if (strcmp(name,"SmbAdiffini")==0) return SmbAdiffiniEnum;
	      else if (strcmp(name,"SmbAini")==0) return SmbAiniEnum;
	      else if (strcmp(name,"SmbARMANoise")==0) return SmbARMANoiseEnum;
	      else if (strcmp(name,"SmbBasinsId")==0) return SmbBasinsIdEnum;
	      else if (strcmp(name,"SmbBMax")==0) return SmbBMaxEnum;
	      else if (strcmp(name,"SmbBMin")==0) return SmbBMinEnum;
	      else if (strcmp(name,"SmbBNeg")==0) return SmbBNegEnum;
	      else if (strcmp(name,"SmbBPos")==0) return SmbBPosEnum;
	      else if (strcmp(name,"SmbC")==0) return SmbCEnum;
	      else if (strcmp(name,"SmbCcsnowValue")==0) return SmbCcsnowValueEnum;
	      else if (strcmp(name,"SmbCciceValue")==0) return SmbCciceValueEnum;
	      else if (strcmp(name,"SmbCotValue")==0) return SmbCotValueEnum;
         else stage=10;
   }
   if(stage==10){
	      if (strcmp(name,"SmbD")==0) return SmbDEnum;
	      else if (strcmp(name,"SmbDailyairdensity")==0) return SmbDailyairdensityEnum;
	      else if (strcmp(name,"SmbDailyairhumidity")==0) return SmbDailyairhumidityEnum;
	      else if (strcmp(name,"SmbDailydlradiation")==0) return SmbDailydlradiationEnum;
	      else if (strcmp(name,"SmbDailydsradiation")==0) return SmbDailydsradiationEnum;
	      else if (strcmp(name,"SmbDailypressure")==0) return SmbDailypressureEnum;
	      else if (strcmp(name,"SmbDailyrainfall")==0) return SmbDailyrainfallEnum;
	      else if (strcmp(name,"SmbDailysnowfall")==0) return SmbDailysnowfallEnum;
	      else if (strcmp(name,"SmbDailytemperature")==0) return SmbDailytemperatureEnum;
	      else if (strcmp(name,"SmbDailywindspeed")==0) return SmbDailywindspeedEnum;
	      else if (strcmp(name,"SmbDini")==0) return SmbDiniEnum;
	      else if (strcmp(name,"SmbDlwrf")==0) return SmbDlwrfEnum;
	      else if (strcmp(name,"SmbDulwrfValue")==0) return SmbDulwrfValueEnum;
	      else if (strcmp(name,"SmbDswrf")==0) return SmbDswrfEnum;
	      else if (strcmp(name,"SmbDswdiffrf")==0) return SmbDswdiffrfEnum;
	      else if (strcmp(name,"SmbDzAdd")==0) return SmbDzAddEnum;
	      else if (strcmp(name,"SmbDz")==0) return SmbDzEnum;
	      else if (strcmp(name,"SmbDzMin")==0) return SmbDzMinEnum;
	      else if (strcmp(name,"SmbDzTop")==0) return SmbDzTopEnum;
	      else if (strcmp(name,"SmbDzini")==0) return SmbDziniEnum;
	      else if (strcmp(name,"SmbEAir")==0) return SmbEAirEnum;
	      else if (strcmp(name,"SmbEC")==0) return SmbECEnum;
	      else if (strcmp(name,"SmbECSubstep")==0) return SmbECSubstepEnum;
	      else if (strcmp(name,"SmbECDt")==0) return SmbECDtEnum;
	      else if (strcmp(name,"SmbECini")==0) return SmbECiniEnum;
	      else if (strcmp(name,"SmbEla")==0) return SmbElaEnum;
	      else if (strcmp(name,"SmbEvaporation")==0) return SmbEvaporationEnum;
	      else if (strcmp(name,"SmbFAC")==0) return SmbFACEnum;
	      else if (strcmp(name,"SmbFACSubstep")==0) return SmbFACSubstepEnum;
	      else if (strcmp(name,"SmbGdn")==0) return SmbGdnEnum;
	      else if (strcmp(name,"SmbGdnini")==0) return SmbGdniniEnum;
	      else if (strcmp(name,"SmbGsp")==0) return SmbGspEnum;
	      else if (strcmp(name,"SmbGspini")==0) return SmbGspiniEnum;
	      else if (strcmp(name,"SmbHIce")==0) return SmbHIceEnum;
	      else if (strcmp(name,"SmbHIceInit")==0) return SmbHIceInitEnum;
	      else if (strcmp(name,"SmbHSnow")==0) return SmbHSnowEnum;
	      else if (strcmp(name,"SmbHSnowInit")==0) return SmbHSnowInitEnum;
	      else if (strcmp(name,"SmbHref")==0) return SmbHrefEnum;
	      else if (strcmp(name,"SmbIsInitialized")==0) return SmbIsInitializedEnum;
	      else if (strcmp(name,"SmbMAdd")==0) return SmbMAddEnum;
	      else if (strcmp(name,"SmbMassBalance")==0) return SmbMassBalanceEnum;
	      else if (strcmp(name,"SmbMassBalanceSnow")==0) return SmbMassBalanceSnowEnum;
	      else if (strcmp(name,"SmbMassBalanceIce")==0) return SmbMassBalanceIceEnum;
	      else if (strcmp(name,"SmbMassBalanceSubstep")==0) return SmbMassBalanceSubstepEnum;
	      else if (strcmp(name,"SmbMassBalanceTransient")==0) return SmbMassBalanceTransientEnum;
	      else if (strcmp(name,"SmbMask")==0) return SmbMaskEnum;
	      else if (strcmp(name,"SmbMeanLHF")==0) return SmbMeanLHFEnum;
	      else if (strcmp(name,"SmbMeanSHF")==0) return SmbMeanSHFEnum;
	      else if (strcmp(name,"SmbMeanULW")==0) return SmbMeanULWEnum;
	      else if (strcmp(name,"SmbMelt")==0) return SmbMeltEnum;
	      else if (strcmp(name,"SmbMeltSubstep")==0) return SmbMeltSubstepEnum;
	      else if (strcmp(name,"SmbMonthlytemperatures")==0) return SmbMonthlytemperaturesEnum;
	      else if (strcmp(name,"SmbMonthlydsradiation")==0) return SmbMonthlydsradiationEnum;
	      else if (strcmp(name,"SmbMonthlydlradiation")==0) return SmbMonthlydlradiationEnum;
	      else if (strcmp(name,"SmbMonthlywindspeed")==0) return SmbMonthlywindspeedEnum;
	      else if (strcmp(name,"SmbMonthlyairhumidity")==0) return SmbMonthlyairhumidityEnum;
	      else if (strcmp(name,"SmbMSurf")==0) return SmbMSurfEnum;
	      else if (strcmp(name,"SmbMSurfSum")==0) return SmbMSurfSumEnum;
	      else if (strcmp(name,"SmbNetLW")==0) return SmbNetLWEnum;
	      else if (strcmp(name,"SmbNetSW")==0) return SmbNetSWEnum;
	      else if (strcmp(name,"SmbPAir")==0) return SmbPAirEnum;
	      else if (strcmp(name,"SmbP")==0) return SmbPEnum;
	      else if (strcmp(name,"SmbPddfacIce")==0) return SmbPddfacIceEnum;
	      else if (strcmp(name,"SmbPddfacSnow")==0) return SmbPddfacSnowEnum;
	      else if (strcmp(name,"SmbPrecipitation")==0) return SmbPrecipitationEnum;
	      else if (strcmp(name,"SmbPrecipitationSubstep")==0) return SmbPrecipitationSubstepEnum;
	      else if (strcmp(name,"SmbPrecipitationsAnomaly")==0) return SmbPrecipitationsAnomalyEnum;
	      else if (strcmp(name,"SmbDsradiationAnomaly")==0) return SmbDsradiationAnomalyEnum;
	      else if (strcmp(name,"SmbDlradiationAnomaly")==0) return SmbDlradiationAnomalyEnum;
	      else if (strcmp(name,"SmbWindspeedAnomaly")==0) return SmbWindspeedAnomalyEnum;
	      else if (strcmp(name,"SmbAirhumidityAnomaly")==0) return SmbAirhumidityAnomalyEnum;
	      else if (strcmp(name,"SmbPrecipitationsLgm")==0) return SmbPrecipitationsLgmEnum;
	      else if (strcmp(name,"SmbPrecipitationsPresentday")==0) return SmbPrecipitationsPresentdayEnum;
	      else if (strcmp(name,"SmbPrecipitationsReconstructed")==0) return SmbPrecipitationsReconstructedEnum;
	      else if (strcmp(name,"SmbRain")==0) return SmbRainEnum;
	      else if (strcmp(name,"SmbRainSubstep")==0) return SmbRainSubstepEnum;
	      else if (strcmp(name,"SmbRe")==0) return SmbReEnum;
	      else if (strcmp(name,"SmbRefreeze")==0) return SmbRefreezeEnum;
	      else if (strcmp(name,"SmbRefreezeSubstep")==0) return SmbRefreezeSubstepEnum;
	      else if (strcmp(name,"SmbReini")==0) return SmbReiniEnum;
	      else if (strcmp(name,"SmbRunoff")==0) return SmbRunoffEnum;
	      else if (strcmp(name,"SmbRunoffSubstep")==0) return SmbRunoffSubstepEnum;
	      else if (strcmp(name,"SmbRunoffTransient")==0) return SmbRunoffTransientEnum;
	      else if (strcmp(name,"SmbS0gcm")==0) return SmbS0gcmEnum;
	      else if (strcmp(name,"SmbS0p")==0) return SmbS0pEnum;
	      else if (strcmp(name,"SmbS0t")==0) return SmbS0tEnum;
	      else if (strcmp(name,"SmbSemicQmr")==0) return SmbSemicQmrEnum;
	      else if (strcmp(name,"SmbSemicQmrInit")==0) return SmbSemicQmrInitEnum;
	      else if (strcmp(name,"SmbSizeini")==0) return SmbSizeiniEnum;
	      else if (strcmp(name,"SmbSmbCorr")==0) return SmbSmbCorrEnum;
	      else if (strcmp(name,"SmbSmbref")==0) return SmbSmbrefEnum;
	      else if (strcmp(name,"SmbSzaValue")==0) return SmbSzaValueEnum;
	      else if (strcmp(name,"SmbSummerMelt")==0) return SmbSummerMeltEnum;
	      else if (strcmp(name,"SmbSummerAlbedo")==0) return SmbSummerAlbedoEnum;
	      else if (strcmp(name,"SmbSnowheight")==0) return SmbSnowheightEnum;
	      else if (strcmp(name,"SmbT")==0) return SmbTEnum;
	      else if (strcmp(name,"SmbTa")==0) return SmbTaEnum;
	      else if (strcmp(name,"SmbTamp")==0) return SmbTampEnum;
	      else if (strcmp(name,"SmbTeValue")==0) return SmbTeValueEnum;
	      else if (strcmp(name,"SmbTemperaturesAnomaly")==0) return SmbTemperaturesAnomalyEnum;
	      else if (strcmp(name,"SmbTemperaturesLgm")==0) return SmbTemperaturesLgmEnum;
	      else if (strcmp(name,"SmbTemperaturesPresentday")==0) return SmbTemperaturesPresentdayEnum;
	      else if (strcmp(name,"SmbTemperaturesReconstructed")==0) return SmbTemperaturesReconstructedEnum;
	      else if (strcmp(name,"SmbTini")==0) return SmbTiniEnum;
	      else if (strcmp(name,"SmbTmean")==0) return SmbTmeanEnum;
	      else if (strcmp(name,"SmbTz")==0) return SmbTzEnum;
	      else if (strcmp(name,"SmbValuesAutoregression")==0) return SmbValuesAutoregressionEnum;
	      else if (strcmp(name,"SmbValuesMovingaverage")==0) return SmbValuesMovingaverageEnum;
	      else if (strcmp(name,"SmbV")==0) return SmbVEnum;
	      else if (strcmp(name,"SmbVmean")==0) return SmbVmeanEnum;
	      else if (strcmp(name,"SmbVz")==0) return SmbVzEnum;
	      else if (strcmp(name,"SmbW")==0) return SmbWEnum;
	      else if (strcmp(name,"SmbWAdd")==0) return SmbWAddEnum;
	      else if (strcmp(name,"SmbWini")==0) return SmbWiniEnum;
	      else if (strcmp(name,"SmbZMax")==0) return SmbZMaxEnum;
	      else if (strcmp(name,"SmbZMin")==0) return SmbZMinEnum;
	      else if (strcmp(name,"SmbZTop")==0) return SmbZTopEnum;
	      else if (strcmp(name,"SmbZY")==0) return SmbZYEnum;
	      else if (strcmp(name,"SolidearthExternalDisplacementEastRate")==0) return SolidearthExternalDisplacementEastRateEnum;
	      else if (strcmp(name,"SolidearthExternalDisplacementNorthRate")==0) return SolidearthExternalDisplacementNorthRateEnum;
         else stage=11;
   }
   if(stage==11){
	      if (strcmp(name,"SolidearthExternalDisplacementUpRate")==0) return SolidearthExternalDisplacementUpRateEnum;
	      else if (strcmp(name,"SolidearthExternalGeoidRate")==0) return SolidearthExternalGeoidRateEnum;
	      else if (strcmp(name,"StochasticForcingDefaultId")==0) return StochasticForcingDefaultIdEnum;
	      else if (strcmp(name,"StrainRateeffective")==0) return StrainRateeffectiveEnum;
	      else if (strcmp(name,"StrainRateparallel")==0) return StrainRateparallelEnum;
	      else if (strcmp(name,"StrainRateperpendicular")==0) return StrainRateperpendicularEnum;
	      else if (strcmp(name,"StrainRatexx")==0) return StrainRatexxEnum;
	      else if (strcmp(name,"StrainRatexy")==0) return StrainRatexyEnum;
	      else if (strcmp(name,"StrainRatexz")==0) return StrainRatexzEnum;
	      else if (strcmp(name,"StrainRateyy")==0) return StrainRateyyEnum;
	      else if (strcmp(name,"StrainRateyz")==0) return StrainRateyzEnum;
	      else if (strcmp(name,"StrainRatezz")==0) return StrainRatezzEnum;
	      else if (strcmp(name,"StressMaxPrincipal")==0) return StressMaxPrincipalEnum;
	      else if (strcmp(name,"StressTensorxx")==0) return StressTensorxxEnum;
	      else if (strcmp(name,"StressTensorxy")==0) return StressTensorxyEnum;
	      else if (strcmp(name,"StressTensorxz")==0) return StressTensorxzEnum;
	      else if (strcmp(name,"StressTensoryy")==0) return StressTensoryyEnum;
	      else if (strcmp(name,"StressTensoryz")==0) return StressTensoryzEnum;
	      else if (strcmp(name,"StressTensorzz")==0) return StressTensorzzEnum;
	      else if (strcmp(name,"SubglacialdischargeARMANoise")==0) return SubglacialdischargeARMANoiseEnum;
	      else if (strcmp(name,"SubglacialdischargeValuesAutoregression")==0) return SubglacialdischargeValuesAutoregressionEnum;
	      else if (strcmp(name,"SubglacialdischargeValuesMovingaverage")==0) return SubglacialdischargeValuesMovingaverageEnum;
	      else if (strcmp(name,"SurfaceAbsMisfit")==0) return SurfaceAbsMisfitEnum;
	      else if (strcmp(name,"SurfaceAbsVelMisfit")==0) return SurfaceAbsVelMisfitEnum;
	      else if (strcmp(name,"Area")==0) return AreaEnum;
	      else if (strcmp(name,"SealevelArea")==0) return SealevelAreaEnum;
	      else if (strcmp(name,"SurfaceArea")==0) return SurfaceAreaEnum;
	      else if (strcmp(name,"SurfaceAverageVelMisfit")==0) return SurfaceAverageVelMisfitEnum;
	      else if (strcmp(name,"SurfaceCrevasse")==0) return SurfaceCrevasseEnum;
	      else if (strcmp(name,"Surface")==0) return SurfaceEnum;
	      else if (strcmp(name,"SurfaceOld")==0) return SurfaceOldEnum;
	      else if (strcmp(name,"SurfaceLogVelMisfit")==0) return SurfaceLogVelMisfitEnum;
	      else if (strcmp(name,"SurfaceLogVxVyMisfit")==0) return SurfaceLogVxVyMisfitEnum;
	      else if (strcmp(name,"SurfaceObservation")==0) return SurfaceObservationEnum;
	      else if (strcmp(name,"SurfaceRelVelMisfit")==0) return SurfaceRelVelMisfitEnum;
	      else if (strcmp(name,"SurfaceSlopeX")==0) return SurfaceSlopeXEnum;
	      else if (strcmp(name,"SurfaceSlopeY")==0) return SurfaceSlopeYEnum;
	      else if (strcmp(name,"Temperature")==0) return TemperatureEnum;
	      else if (strcmp(name,"TemperaturePDD")==0) return TemperaturePDDEnum;
	      else if (strcmp(name,"TemperaturePicard")==0) return TemperaturePicardEnum;
	      else if (strcmp(name,"TemperatureSEMIC")==0) return TemperatureSEMICEnum;
	      else if (strcmp(name,"ThermalforcingARMANoise")==0) return ThermalforcingARMANoiseEnum;
	      else if (strcmp(name,"ThermalForcing")==0) return ThermalForcingEnum;
	      else if (strcmp(name,"ThermalforcingValuesAutoregression")==0) return ThermalforcingValuesAutoregressionEnum;
	      else if (strcmp(name,"ThermalforcingValuesMovingaverage")==0) return ThermalforcingValuesMovingaverageEnum;
	      else if (strcmp(name,"ThermalSpctemperature")==0) return ThermalSpctemperatureEnum;
	      else if (strcmp(name,"ThicknessAbsGradient")==0) return ThicknessAbsGradientEnum;
	      else if (strcmp(name,"ThicknessAbsMisfit")==0) return ThicknessAbsMisfitEnum;
	      else if (strcmp(name,"ThicknessAcrossGradient")==0) return ThicknessAcrossGradientEnum;
	      else if (strcmp(name,"ThicknessAlongGradient")==0) return ThicknessAlongGradientEnum;
	      else if (strcmp(name,"Thickness")==0) return ThicknessEnum;
	      else if (strcmp(name,"ThicknessOld")==0) return ThicknessOldEnum;
	      else if (strcmp(name,"ThicknessPositive")==0) return ThicknessPositiveEnum;
	      else if (strcmp(name,"ThicknessResidual")==0) return ThicknessResidualEnum;
	      else if (strcmp(name,"TransientAccumulatedDeltaIceThickness")==0) return TransientAccumulatedDeltaIceThicknessEnum;
	      else if (strcmp(name,"Vel")==0) return VelEnum;
	      else if (strcmp(name,"VxAverage")==0) return VxAverageEnum;
	      else if (strcmp(name,"VxBase")==0) return VxBaseEnum;
	      else if (strcmp(name,"VxDebris")==0) return VxDebrisEnum;
	      else if (strcmp(name,"Vx")==0) return VxEnum;
	      else if (strcmp(name,"VxMesh")==0) return VxMeshEnum;
	      else if (strcmp(name,"VxObs")==0) return VxObsEnum;
	      else if (strcmp(name,"VxShear")==0) return VxShearEnum;
	      else if (strcmp(name,"VxSurface")==0) return VxSurfaceEnum;
	      else if (strcmp(name,"VyAverage")==0) return VyAverageEnum;
	      else if (strcmp(name,"VyBase")==0) return VyBaseEnum;
	      else if (strcmp(name,"VyDebris")==0) return VyDebrisEnum;
	      else if (strcmp(name,"Vy")==0) return VyEnum;
	      else if (strcmp(name,"VyMesh")==0) return VyMeshEnum;
	      else if (strcmp(name,"VyObs")==0) return VyObsEnum;
	      else if (strcmp(name,"VyShear")==0) return VyShearEnum;
	      else if (strcmp(name,"VySurface")==0) return VySurfaceEnum;
	      else if (strcmp(name,"Vz")==0) return VzEnum;
	      else if (strcmp(name,"VzFS")==0) return VzFSEnum;
	      else if (strcmp(name,"VzHO")==0) return VzHOEnum;
	      else if (strcmp(name,"VzMesh")==0) return VzMeshEnum;
	      else if (strcmp(name,"VzSSA")==0) return VzSSAEnum;
	      else if (strcmp(name,"WaterColumnOld")==0) return WaterColumnOldEnum;
	      else if (strcmp(name,"Watercolumn")==0) return WatercolumnEnum;
	      else if (strcmp(name,"WaterfractionDrainage")==0) return WaterfractionDrainageEnum;
	      else if (strcmp(name,"WaterfractionDrainageIntegrated")==0) return WaterfractionDrainageIntegratedEnum;
	      else if (strcmp(name,"Waterfraction")==0) return WaterfractionEnum;
	      else if (strcmp(name,"Waterheight")==0) return WaterheightEnum;
	      else if (strcmp(name,"WaterPressureArmaPerturbation")==0) return WaterPressureArmaPerturbationEnum;
	      else if (strcmp(name,"WaterPressureValuesAutoregression")==0) return WaterPressureValuesAutoregressionEnum;
	      else if (strcmp(name,"WaterPressureValuesMovingaverage")==0) return WaterPressureValuesMovingaverageEnum;
	      else if (strcmp(name,"WeightsLevelsetObservation")==0) return WeightsLevelsetObservationEnum;
	      else if (strcmp(name,"WeightsMeltObservation")==0) return WeightsMeltObservationEnum;
	      else if (strcmp(name,"WeightsVxObservation")==0) return WeightsVxObservationEnum;
	      else if (strcmp(name,"WeightsVyObservation")==0) return WeightsVyObservationEnum;
	      else if (strcmp(name,"WeightsSurfaceObservation")==0) return WeightsSurfaceObservationEnum;
	      else if (strcmp(name,"OldAccumulatedDeltaBottomPressure")==0) return OldAccumulatedDeltaBottomPressureEnum;
	      else if (strcmp(name,"OldAccumulatedDeltaIceThickness")==0) return OldAccumulatedDeltaIceThicknessEnum;
	      else if (strcmp(name,"OldAccumulatedDeltaTws")==0) return OldAccumulatedDeltaTwsEnum;
	      else if (strcmp(name,"Outputdefinition1")==0) return Outputdefinition1Enum;
	      else if (strcmp(name,"Outputdefinition10")==0) return Outputdefinition10Enum;
	      else if (strcmp(name,"Outputdefinition11")==0) return Outputdefinition11Enum;
	      else if (strcmp(name,"Outputdefinition12")==0) return Outputdefinition12Enum;
	      else if (strcmp(name,"Outputdefinition13")==0) return Outputdefinition13Enum;
	      else if (strcmp(name,"Outputdefinition14")==0) return Outputdefinition14Enum;
	      else if (strcmp(name,"Outputdefinition15")==0) return Outputdefinition15Enum;
	      else if (strcmp(name,"Outputdefinition16")==0) return Outputdefinition16Enum;
	      else if (strcmp(name,"Outputdefinition17")==0) return Outputdefinition17Enum;
	      else if (strcmp(name,"Outputdefinition18")==0) return Outputdefinition18Enum;
	      else if (strcmp(name,"Outputdefinition19")==0) return Outputdefinition19Enum;
	      else if (strcmp(name,"Outputdefinition20")==0) return Outputdefinition20Enum;
	      else if (strcmp(name,"Outputdefinition21")==0) return Outputdefinition21Enum;
	      else if (strcmp(name,"Outputdefinition22")==0) return Outputdefinition22Enum;
	      else if (strcmp(name,"Outputdefinition23")==0) return Outputdefinition23Enum;
	      else if (strcmp(name,"Outputdefinition24")==0) return Outputdefinition24Enum;
	      else if (strcmp(name,"Outputdefinition25")==0) return Outputdefinition25Enum;
	      else if (strcmp(name,"Outputdefinition26")==0) return Outputdefinition26Enum;
	      else if (strcmp(name,"Outputdefinition27")==0) return Outputdefinition27Enum;
	      else if (strcmp(name,"Outputdefinition28")==0) return Outputdefinition28Enum;
	      else if (strcmp(name,"Outputdefinition29")==0) return Outputdefinition29Enum;
	      else if (strcmp(name,"Outputdefinition2")==0) return Outputdefinition2Enum;
	      else if (strcmp(name,"Outputdefinition30")==0) return Outputdefinition30Enum;
	      else if (strcmp(name,"Outputdefinition31")==0) return Outputdefinition31Enum;
	      else if (strcmp(name,"Outputdefinition32")==0) return Outputdefinition32Enum;
	      else if (strcmp(name,"Outputdefinition33")==0) return Outputdefinition33Enum;
         else stage=12;
   }
   if(stage==12){
	      if (strcmp(name,"Outputdefinition34")==0) return Outputdefinition34Enum;
	      else if (strcmp(name,"Outputdefinition35")==0) return Outputdefinition35Enum;
	      else if (strcmp(name,"Outputdefinition36")==0) return Outputdefinition36Enum;
	      else if (strcmp(name,"Outputdefinition37")==0) return Outputdefinition37Enum;
	      else if (strcmp(name,"Outputdefinition38")==0) return Outputdefinition38Enum;
	      else if (strcmp(name,"Outputdefinition39")==0) return Outputdefinition39Enum;
	      else if (strcmp(name,"Outputdefinition3")==0) return Outputdefinition3Enum;
	      else if (strcmp(name,"Outputdefinition40")==0) return Outputdefinition40Enum;
	      else if (strcmp(name,"Outputdefinition41")==0) return Outputdefinition41Enum;
	      else if (strcmp(name,"Outputdefinition42")==0) return Outputdefinition42Enum;
	      else if (strcmp(name,"Outputdefinition43")==0) return Outputdefinition43Enum;
	      else if (strcmp(name,"Outputdefinition44")==0) return Outputdefinition44Enum;
	      else if (strcmp(name,"Outputdefinition45")==0) return Outputdefinition45Enum;
	      else if (strcmp(name,"Outputdefinition46")==0) return Outputdefinition46Enum;
	      else if (strcmp(name,"Outputdefinition47")==0) return Outputdefinition47Enum;
	      else if (strcmp(name,"Outputdefinition48")==0) return Outputdefinition48Enum;
	      else if (strcmp(name,"Outputdefinition49")==0) return Outputdefinition49Enum;
	      else if (strcmp(name,"Outputdefinition4")==0) return Outputdefinition4Enum;
	      else if (strcmp(name,"Outputdefinition50")==0) return Outputdefinition50Enum;
	      else if (strcmp(name,"Outputdefinition51")==0) return Outputdefinition51Enum;
	      else if (strcmp(name,"Outputdefinition52")==0) return Outputdefinition52Enum;
	      else if (strcmp(name,"Outputdefinition53")==0) return Outputdefinition53Enum;
	      else if (strcmp(name,"Outputdefinition54")==0) return Outputdefinition54Enum;
	      else if (strcmp(name,"Outputdefinition55")==0) return Outputdefinition55Enum;
	      else if (strcmp(name,"Outputdefinition56")==0) return Outputdefinition56Enum;
	      else if (strcmp(name,"Outputdefinition57")==0) return Outputdefinition57Enum;
	      else if (strcmp(name,"Outputdefinition58")==0) return Outputdefinition58Enum;
	      else if (strcmp(name,"Outputdefinition59")==0) return Outputdefinition59Enum;
	      else if (strcmp(name,"Outputdefinition5")==0) return Outputdefinition5Enum;
	      else if (strcmp(name,"Outputdefinition60")==0) return Outputdefinition60Enum;
	      else if (strcmp(name,"Outputdefinition61")==0) return Outputdefinition61Enum;
	      else if (strcmp(name,"Outputdefinition62")==0) return Outputdefinition62Enum;
	      else if (strcmp(name,"Outputdefinition63")==0) return Outputdefinition63Enum;
	      else if (strcmp(name,"Outputdefinition64")==0) return Outputdefinition64Enum;
	      else if (strcmp(name,"Outputdefinition65")==0) return Outputdefinition65Enum;
	      else if (strcmp(name,"Outputdefinition66")==0) return Outputdefinition66Enum;
	      else if (strcmp(name,"Outputdefinition67")==0) return Outputdefinition67Enum;
	      else if (strcmp(name,"Outputdefinition68")==0) return Outputdefinition68Enum;
	      else if (strcmp(name,"Outputdefinition69")==0) return Outputdefinition69Enum;
	      else if (strcmp(name,"Outputdefinition6")==0) return Outputdefinition6Enum;
	      else if (strcmp(name,"Outputdefinition70")==0) return Outputdefinition70Enum;
	      else if (strcmp(name,"Outputdefinition71")==0) return Outputdefinition71Enum;
	      else if (strcmp(name,"Outputdefinition72")==0) return Outputdefinition72Enum;
	      else if (strcmp(name,"Outputdefinition73")==0) return Outputdefinition73Enum;
	      else if (strcmp(name,"Outputdefinition74")==0) return Outputdefinition74Enum;
	      else if (strcmp(name,"Outputdefinition75")==0) return Outputdefinition75Enum;
	      else if (strcmp(name,"Outputdefinition76")==0) return Outputdefinition76Enum;
	      else if (strcmp(name,"Outputdefinition77")==0) return Outputdefinition77Enum;
	      else if (strcmp(name,"Outputdefinition78")==0) return Outputdefinition78Enum;
	      else if (strcmp(name,"Outputdefinition79")==0) return Outputdefinition79Enum;
	      else if (strcmp(name,"Outputdefinition7")==0) return Outputdefinition7Enum;
	      else if (strcmp(name,"Outputdefinition80")==0) return Outputdefinition80Enum;
	      else if (strcmp(name,"Outputdefinition81")==0) return Outputdefinition81Enum;
	      else if (strcmp(name,"Outputdefinition82")==0) return Outputdefinition82Enum;
	      else if (strcmp(name,"Outputdefinition83")==0) return Outputdefinition83Enum;
	      else if (strcmp(name,"Outputdefinition84")==0) return Outputdefinition84Enum;
	      else if (strcmp(name,"Outputdefinition85")==0) return Outputdefinition85Enum;
	      else if (strcmp(name,"Outputdefinition86")==0) return Outputdefinition86Enum;
	      else if (strcmp(name,"Outputdefinition87")==0) return Outputdefinition87Enum;
	      else if (strcmp(name,"Outputdefinition88")==0) return Outputdefinition88Enum;
	      else if (strcmp(name,"Outputdefinition89")==0) return Outputdefinition89Enum;
	      else if (strcmp(name,"Outputdefinition8")==0) return Outputdefinition8Enum;
	      else if (strcmp(name,"Outputdefinition90")==0) return Outputdefinition90Enum;
	      else if (strcmp(name,"Outputdefinition91")==0) return Outputdefinition91Enum;
	      else if (strcmp(name,"Outputdefinition92")==0) return Outputdefinition92Enum;
	      else if (strcmp(name,"Outputdefinition93")==0) return Outputdefinition93Enum;
	      else if (strcmp(name,"Outputdefinition94")==0) return Outputdefinition94Enum;
	      else if (strcmp(name,"Outputdefinition95")==0) return Outputdefinition95Enum;
	      else if (strcmp(name,"Outputdefinition96")==0) return Outputdefinition96Enum;
	      else if (strcmp(name,"Outputdefinition97")==0) return Outputdefinition97Enum;
	      else if (strcmp(name,"Outputdefinition98")==0) return Outputdefinition98Enum;
	      else if (strcmp(name,"Outputdefinition99")==0) return Outputdefinition99Enum;
	      else if (strcmp(name,"Outputdefinition9")==0) return Outputdefinition9Enum;
	      else if (strcmp(name,"Outputdefinition100")==0) return Outputdefinition100Enum;
	      else if (strcmp(name,"InputsEND")==0) return InputsENDEnum;
	      else if (strcmp(name,"Absolute")==0) return AbsoluteEnum;
	      else if (strcmp(name,"AdaptiveTimestepping")==0) return AdaptiveTimesteppingEnum;
	      else if (strcmp(name,"AdjointBalancethickness2Analysis")==0) return AdjointBalancethickness2AnalysisEnum;
	      else if (strcmp(name,"AdjointBalancethicknessAnalysis")==0) return AdjointBalancethicknessAnalysisEnum;
	      else if (strcmp(name,"AdjointHorizAnalysis")==0) return AdjointHorizAnalysisEnum;
	      else if (strcmp(name,"AgeAnalysis")==0) return AgeAnalysisEnum;
	      else if (strcmp(name,"AggressiveMigration")==0) return AggressiveMigrationEnum;
	      else if (strcmp(name,"AmrBamg")==0) return AmrBamgEnum;
	      else if (strcmp(name,"AmrNeopz")==0) return AmrNeopzEnum;
	      else if (strcmp(name,"Arrhenius")==0) return ArrheniusEnum;
	      else if (strcmp(name,"AutodiffJacobian")==0) return AutodiffJacobianEnum;
	      else if (strcmp(name,"Balancethickness2Analysis")==0) return Balancethickness2AnalysisEnum;
	      else if (strcmp(name,"Balancethickness2Solution")==0) return Balancethickness2SolutionEnum;
	      else if (strcmp(name,"BalancethicknessAnalysis")==0) return BalancethicknessAnalysisEnum;
	      else if (strcmp(name,"BalancethicknessApparentMassbalance")==0) return BalancethicknessApparentMassbalanceEnum;
	      else if (strcmp(name,"BalancethicknessSoftAnalysis")==0) return BalancethicknessSoftAnalysisEnum;
	      else if (strcmp(name,"BalancethicknessSoftSolution")==0) return BalancethicknessSoftSolutionEnum;
	      else if (strcmp(name,"BalancethicknessSolution")==0) return BalancethicknessSolutionEnum;
	      else if (strcmp(name,"BalancevelocityAnalysis")==0) return BalancevelocityAnalysisEnum;
	      else if (strcmp(name,"BalancevelocitySolution")==0) return BalancevelocitySolutionEnum;
	      else if (strcmp(name,"BasalforcingsIsmip6")==0) return BasalforcingsIsmip6Enum;
	      else if (strcmp(name,"BasalforcingsPico")==0) return BasalforcingsPicoEnum;
	      else if (strcmp(name,"BeckmannGoosseFloatingMeltRate")==0) return BeckmannGoosseFloatingMeltRateEnum;
	      else if (strcmp(name,"BedSlopeSolution")==0) return BedSlopeSolutionEnum;
	      else if (strcmp(name,"BoolExternalResult")==0) return BoolExternalResultEnum;
	      else if (strcmp(name,"BoolInput")==0) return BoolInputEnum;
	      else if (strcmp(name,"IntInput")==0) return IntInputEnum;
	      else if (strcmp(name,"DoubleInput")==0) return DoubleInputEnum;
	      else if (strcmp(name,"BoolParam")==0) return BoolParamEnum;
	      else if (strcmp(name,"Boundary")==0) return BoundaryEnum;
	      else if (strcmp(name,"BuddJacka")==0) return BuddJackaEnum;
	      else if (strcmp(name,"CalvingDev2")==0) return CalvingDev2Enum;
	      else if (strcmp(name,"CalvingHab")==0) return CalvingHabEnum;
	      else if (strcmp(name,"CalvingLevermann")==0) return CalvingLevermannEnum;
	      else if (strcmp(name,"CalvingTest")==0) return CalvingTestEnum;
	      else if (strcmp(name,"CalvingParameterization")==0) return CalvingParameterizationEnum;
	      else if (strcmp(name,"CalvingCalvingMIP")==0) return CalvingCalvingMIPEnum;
	      else if (strcmp(name,"CalvingVonmises")==0) return CalvingVonmisesEnum;
	      else if (strcmp(name,"CalvingVonmisesAD")==0) return CalvingVonmisesADEnum;
	      else if (strcmp(name,"CalvingPollard")==0) return CalvingPollardEnum;
	      else if (strcmp(name,"Cfdragcoeffabsgrad")==0) return CfdragcoeffabsgradEnum;
	      else if (strcmp(name,"Cfdragcoeffabsgradtransient")==0) return CfdragcoeffabsgradtransientEnum;
	      else if (strcmp(name,"Cfrheologybbarabsgrad")==0) return CfrheologybbarabsgradEnum;
	      else if (strcmp(name,"Cfrheologybbarabsgradtransient")==0) return CfrheologybbarabsgradtransientEnum;
	      else if (strcmp(name,"Cfsurfacelogvel")==0) return CfsurfacelogvelEnum;
         else stage=13;
   }
   if(stage==13){
	      if (strcmp(name,"Cfsurfacesquare")==0) return CfsurfacesquareEnum;
	      else if (strcmp(name,"Cfsurfacesquaretransient")==0) return CfsurfacesquaretransientEnum;
	      else if (strcmp(name,"Cflevelsetmisfit")==0) return CflevelsetmisfitEnum;
	      else if (strcmp(name,"Channel")==0) return ChannelEnum;
	      else if (strcmp(name,"ChannelArea")==0) return ChannelAreaEnum;
	      else if (strcmp(name,"ChannelAreaOld")==0) return ChannelAreaOldEnum;
	      else if (strcmp(name,"ChannelDischarge")==0) return ChannelDischargeEnum;
	      else if (strcmp(name,"Closed")==0) return ClosedEnum;
	      else if (strcmp(name,"Colinear")==0) return ColinearEnum;
	      else if (strcmp(name,"Constraints")==0) return ConstraintsEnum;
	      else if (strcmp(name,"Contact")==0) return ContactEnum;
	      else if (strcmp(name,"Contour")==0) return ContourEnum;
	      else if (strcmp(name,"Contours")==0) return ContoursEnum;
	      else if (strcmp(name,"ControlInput")==0) return ControlInputEnum;
	      else if (strcmp(name,"ControlInputGrad")==0) return ControlInputGradEnum;
	      else if (strcmp(name,"ControlInputMaxs")==0) return ControlInputMaxsEnum;
	      else if (strcmp(name,"ControlInputMins")==0) return ControlInputMinsEnum;
	      else if (strcmp(name,"ControlInputValues")==0) return ControlInputValuesEnum;
	      else if (strcmp(name,"ControlParam")==0) return ControlParamEnum;
	      else if (strcmp(name,"CrouzeixRaviart")==0) return CrouzeixRaviartEnum;
	      else if (strcmp(name,"Cuffey")==0) return CuffeyEnum;
	      else if (strcmp(name,"CuffeyTemperate")==0) return CuffeyTemperateEnum;
	      else if (strcmp(name,"DamageEvolutionAnalysis")==0) return DamageEvolutionAnalysisEnum;
	      else if (strcmp(name,"DamageEvolutionSolution")==0) return DamageEvolutionSolutionEnum;
	      else if (strcmp(name,"DataSet")==0) return DataSetEnum;
	      else if (strcmp(name,"DataSetParam")==0) return DataSetParamEnum;
	      else if (strcmp(name,"DatasetInput")==0) return DatasetInputEnum;
	      else if (strcmp(name,"DebrisAnalysis")==0) return DebrisAnalysisEnum;
	      else if (strcmp(name,"DebrisSolution")==0) return DebrisSolutionEnum;
	      else if (strcmp(name,"DefaultAnalysis")==0) return DefaultAnalysisEnum;
	      else if (strcmp(name,"DefaultCalving")==0) return DefaultCalvingEnum;
	      else if (strcmp(name,"Dense")==0) return DenseEnum;
	      else if (strcmp(name,"DependentObject")==0) return DependentObjectEnum;
	      else if (strcmp(name,"DepthAverageAnalysis")==0) return DepthAverageAnalysisEnum;
	      else if (strcmp(name,"DeviatoricStressErrorEstimator")==0) return DeviatoricStressErrorEstimatorEnum;
	      else if (strcmp(name,"Divergence")==0) return DivergenceEnum;
	      else if (strcmp(name,"Domain3Dsurface")==0) return Domain3DsurfaceEnum;
	      else if (strcmp(name,"DoubleArrayInput")==0) return DoubleArrayInputEnum;
	      else if (strcmp(name,"ArrayInput")==0) return ArrayInputEnum;
	      else if (strcmp(name,"IntArrayInput")==0) return IntArrayInputEnum;
	      else if (strcmp(name,"DoubleExternalResult")==0) return DoubleExternalResultEnum;
	      else if (strcmp(name,"DoubleMatArrayParam")==0) return DoubleMatArrayParamEnum;
	      else if (strcmp(name,"DoubleMatExternalResult")==0) return DoubleMatExternalResultEnum;
	      else if (strcmp(name,"DoubleMatParam")==0) return DoubleMatParamEnum;
	      else if (strcmp(name,"DoubleParam")==0) return DoubleParamEnum;
	      else if (strcmp(name,"DoubleVecParam")==0) return DoubleVecParamEnum;
	      else if (strcmp(name,"Element")==0) return ElementEnum;
	      else if (strcmp(name,"ElementHook")==0) return ElementHookEnum;
	      else if (strcmp(name,"ElementSId")==0) return ElementSIdEnum;
	      else if (strcmp(name,"EnthalpyAnalysis")==0) return EnthalpyAnalysisEnum;
	      else if (strcmp(name,"EsaAnalysis")==0) return EsaAnalysisEnum;
	      else if (strcmp(name,"EsaSolution")==0) return EsaSolutionEnum;
	      else if (strcmp(name,"EsaTransitions")==0) return EsaTransitionsEnum;
	      else if (strcmp(name,"ExternalResult")==0) return ExternalResultEnum;
	      else if (strcmp(name,"ExtrapolationAnalysis")==0) return ExtrapolationAnalysisEnum;
	      else if (strcmp(name,"ExtrudeFromBaseAnalysis")==0) return ExtrudeFromBaseAnalysisEnum;
	      else if (strcmp(name,"ExtrudeFromTopAnalysis")==0) return ExtrudeFromTopAnalysisEnum;
	      else if (strcmp(name,"FSApproximation")==0) return FSApproximationEnum;
	      else if (strcmp(name,"FSSolver")==0) return FSSolverEnum;
	      else if (strcmp(name,"FSpressure")==0) return FSpressureEnum;
	      else if (strcmp(name,"FSvelocity")==0) return FSvelocityEnum;
	      else if (strcmp(name,"FemModel")==0) return FemModelEnum;
	      else if (strcmp(name,"FileParam")==0) return FileParamEnum;
	      else if (strcmp(name,"FixedTimestepping")==0) return FixedTimesteppingEnum;
	      else if (strcmp(name,"FloatingArea")==0) return FloatingAreaEnum;
	      else if (strcmp(name,"FloatingAreaScaled")==0) return FloatingAreaScaledEnum;
	      else if (strcmp(name,"FloatingMeltRate")==0) return FloatingMeltRateEnum;
	      else if (strcmp(name,"Free")==0) return FreeEnum;
	      else if (strcmp(name,"FreeSurfaceBaseAnalysis")==0) return FreeSurfaceBaseAnalysisEnum;
	      else if (strcmp(name,"FreeSurfaceTopAnalysis")==0) return FreeSurfaceTopAnalysisEnum;
	      else if (strcmp(name,"FrontalForcingsDefault")==0) return FrontalForcingsDefaultEnum;
	      else if (strcmp(name,"FrontalForcingsRignot")==0) return FrontalForcingsRignotEnum;
	      else if (strcmp(name,"FrontalForcingsRignotarma")==0) return FrontalForcingsRignotarmaEnum;
	      else if (strcmp(name,"Fset")==0) return FsetEnum;
	      else if (strcmp(name,"FullMeltOnPartiallyFloating")==0) return FullMeltOnPartiallyFloatingEnum;
	      else if (strcmp(name,"GLheightadvectionAnalysis")==0) return GLheightadvectionAnalysisEnum;
	      else if (strcmp(name,"GaussPenta")==0) return GaussPentaEnum;
	      else if (strcmp(name,"GaussSeg")==0) return GaussSegEnum;
	      else if (strcmp(name,"GaussTetra")==0) return GaussTetraEnum;
	      else if (strcmp(name,"GaussTria")==0) return GaussTriaEnum;
	      else if (strcmp(name,"GenericOption")==0) return GenericOptionEnum;
	      else if (strcmp(name,"GenericParam")==0) return GenericParamEnum;
	      else if (strcmp(name,"GenericExternalResult")==0) return GenericExternalResultEnum;
	      else if (strcmp(name,"Gradient1")==0) return Gradient1Enum;
	      else if (strcmp(name,"Gradient2")==0) return Gradient2Enum;
	      else if (strcmp(name,"Gradient3")==0) return Gradient3Enum;
	      else if (strcmp(name,"Gradient4")==0) return Gradient4Enum;
	      else if (strcmp(name,"GroundedArea")==0) return GroundedAreaEnum;
	      else if (strcmp(name,"GroundedAreaScaled")==0) return GroundedAreaScaledEnum;
	      else if (strcmp(name,"GroundingOnly")==0) return GroundingOnlyEnum;
	      else if (strcmp(name,"GroundinglineMassFlux")==0) return GroundinglineMassFluxEnum;
	      else if (strcmp(name,"Gset")==0) return GsetEnum;
	      else if (strcmp(name,"Gsl")==0) return GslEnum;
	      else if (strcmp(name,"HOApproximation")==0) return HOApproximationEnum;
	      else if (strcmp(name,"HOFSApproximation")==0) return HOFSApproximationEnum;
	      else if (strcmp(name,"Hook")==0) return HookEnum;
	      else if (strcmp(name,"HydrologyArmapwAnalysis")==0) return HydrologyArmapwAnalysisEnum;
	      else if (strcmp(name,"Hydrologyarmapw")==0) return HydrologyarmapwEnum;
	      else if (strcmp(name,"HydrologyDCEfficientAnalysis")==0) return HydrologyDCEfficientAnalysisEnum;
	      else if (strcmp(name,"HydrologyDCInefficientAnalysis")==0) return HydrologyDCInefficientAnalysisEnum;
	      else if (strcmp(name,"HydrologyGlaDSAnalysis")==0) return HydrologyGlaDSAnalysisEnum;
	      else if (strcmp(name,"HydrologyGlaDS")==0) return HydrologyGlaDSEnum;
	      else if (strcmp(name,"HydrologyPismAnalysis")==0) return HydrologyPismAnalysisEnum;
	      else if (strcmp(name,"HydrologyShaktiAnalysis")==0) return HydrologyShaktiAnalysisEnum;
	      else if (strcmp(name,"HydrologyShreveAnalysis")==0) return HydrologyShreveAnalysisEnum;
	      else if (strcmp(name,"HydrologySolution")==0) return HydrologySolutionEnum;
	      else if (strcmp(name,"HydrologySubsteps")==0) return HydrologySubstepsEnum;
	      else if (strcmp(name,"HydrologySubTime")==0) return HydrologySubTimeEnum;
	      else if (strcmp(name,"Hydrologydc")==0) return HydrologydcEnum;
	      else if (strcmp(name,"Hydrologypism")==0) return HydrologypismEnum;
	      else if (strcmp(name,"Hydrologyshakti")==0) return HydrologyshaktiEnum;
	      else if (strcmp(name,"Hydrologyshreve")==0) return HydrologyshreveEnum;
	      else if (strcmp(name,"IceMass")==0) return IceMassEnum;
	      else if (strcmp(name,"IceMassScaled")==0) return IceMassScaledEnum;
	      else if (strcmp(name,"IceVolumeAboveFloatation")==0) return IceVolumeAboveFloatationEnum;
	      else if (strcmp(name,"IceVolumeAboveFloatationScaled")==0) return IceVolumeAboveFloatationScaledEnum;
	      else if (strcmp(name,"IceVolume")==0) return IceVolumeEnum;
	      else if (strcmp(name,"IceVolumeScaled")==0) return IceVolumeScaledEnum;
	      else if (strcmp(name,"IcefrontMassFlux")==0) return IcefrontMassFluxEnum;
	      else if (strcmp(name,"IcefrontMassFluxLevelset")==0) return IcefrontMassFluxLevelsetEnum;
         else stage=14;
   }
   if(stage==14){
	      if (strcmp(name,"Incremental")==0) return IncrementalEnum;
	      else if (strcmp(name,"Indexed")==0) return IndexedEnum;
	      else if (strcmp(name,"IntExternalResult")==0) return IntExternalResultEnum;
	      else if (strcmp(name,"ElementInput")==0) return ElementInputEnum;
	      else if (strcmp(name,"IntMatExternalResult")==0) return IntMatExternalResultEnum;
	      else if (strcmp(name,"IntMatParam")==0) return IntMatParamEnum;
	      else if (strcmp(name,"IntParam")==0) return IntParamEnum;
	      else if (strcmp(name,"IntVecParam")==0) return IntVecParamEnum;
	      else if (strcmp(name,"Inputs")==0) return InputsEnum;
	      else if (strcmp(name,"Internal")==0) return InternalEnum;
	      else if (strcmp(name,"Intersect")==0) return IntersectEnum;
	      else if (strcmp(name,"InversionVzObs")==0) return InversionVzObsEnum;
	      else if (strcmp(name,"J")==0) return JEnum;
	      else if (strcmp(name,"L1L2Approximation")==0) return L1L2ApproximationEnum;
	      else if (strcmp(name,"MOLHOApproximation")==0) return MOLHOApproximationEnum;
	      else if (strcmp(name,"L2ProjectionBaseAnalysis")==0) return L2ProjectionBaseAnalysisEnum;
	      else if (strcmp(name,"L2ProjectionEPLAnalysis")==0) return L2ProjectionEPLAnalysisEnum;
	      else if (strcmp(name,"LACrouzeixRaviart")==0) return LACrouzeixRaviartEnum;
	      else if (strcmp(name,"LATaylorHood")==0) return LATaylorHoodEnum;
	      else if (strcmp(name,"LambdaS")==0) return LambdaSEnum;
	      else if (strcmp(name,"LevelsetAnalysis")==0) return LevelsetAnalysisEnum;
	      else if (strcmp(name,"LevelsetfunctionPicard")==0) return LevelsetfunctionPicardEnum;
	      else if (strcmp(name,"LinearFloatingMeltRate")==0) return LinearFloatingMeltRateEnum;
	      else if (strcmp(name,"LinearFloatingMeltRatearma")==0) return LinearFloatingMeltRatearmaEnum;
	      else if (strcmp(name,"LliboutryDuval")==0) return LliboutryDuvalEnum;
	      else if (strcmp(name,"Loads")==0) return LoadsEnum;
	      else if (strcmp(name,"LoveAnalysis")==0) return LoveAnalysisEnum;
	      else if (strcmp(name,"LoveHf")==0) return LoveHfEnum;
	      else if (strcmp(name,"LoveHt")==0) return LoveHtEnum;
	      else if (strcmp(name,"LoveKernelsImag")==0) return LoveKernelsImagEnum;
	      else if (strcmp(name,"LoveKernelsReal")==0) return LoveKernelsRealEnum;
	      else if (strcmp(name,"LoveKf")==0) return LoveKfEnum;
	      else if (strcmp(name,"LoveKt")==0) return LoveKtEnum;
	      else if (strcmp(name,"LoveLf")==0) return LoveLfEnum;
	      else if (strcmp(name,"LoveLt")==0) return LoveLtEnum;
	      else if (strcmp(name,"LoveTidalHt")==0) return LoveTidalHtEnum;
	      else if (strcmp(name,"LoveTidalKt")==0) return LoveTidalKtEnum;
	      else if (strcmp(name,"LoveTidalLt")==0) return LoveTidalLtEnum;
	      else if (strcmp(name,"LovePMTF1t")==0) return LovePMTF1tEnum;
	      else if (strcmp(name,"LovePMTF2t")==0) return LovePMTF2tEnum;
	      else if (strcmp(name,"LoveYi")==0) return LoveYiEnum;
	      else if (strcmp(name,"LoveRhs")==0) return LoveRhsEnum;
	      else if (strcmp(name,"LoveSolution")==0) return LoveSolutionEnum;
	      else if (strcmp(name,"MINI")==0) return MINIEnum;
	      else if (strcmp(name,"MINIcondensed")==0) return MINIcondensedEnum;
	      else if (strcmp(name,"MantlePlumeGeothermalFlux")==0) return MantlePlumeGeothermalFluxEnum;
	      else if (strcmp(name,"MassFlux")==0) return MassFluxEnum;
	      else if (strcmp(name,"Masscon")==0) return MassconEnum;
	      else if (strcmp(name,"Massconaxpby")==0) return MassconaxpbyEnum;
	      else if (strcmp(name,"Massfluxatgate")==0) return MassfluxatgateEnum;
	      else if (strcmp(name,"MasstransportAnalysis")==0) return MasstransportAnalysisEnum;
	      else if (strcmp(name,"MasstransportSolution")==0) return MasstransportSolutionEnum;
	      else if (strcmp(name,"Matdamageice")==0) return MatdamageiceEnum;
	      else if (strcmp(name,"Matenhancedice")==0) return MatenhancediceEnum;
	      else if (strcmp(name,"Materials")==0) return MaterialsEnum;
	      else if (strcmp(name,"Matestar")==0) return MatestarEnum;
	      else if (strcmp(name,"Matice")==0) return MaticeEnum;
	      else if (strcmp(name,"Matlitho")==0) return MatlithoEnum;
	      else if (strcmp(name,"Mathydro")==0) return MathydroEnum;
	      else if (strcmp(name,"MatrixParam")==0) return MatrixParamEnum;
	      else if (strcmp(name,"MaxAbsVx")==0) return MaxAbsVxEnum;
	      else if (strcmp(name,"MaxAbsVy")==0) return MaxAbsVyEnum;
	      else if (strcmp(name,"MaxAbsVz")==0) return MaxAbsVzEnum;
	      else if (strcmp(name,"MaxDivergence")==0) return MaxDivergenceEnum;
	      else if (strcmp(name,"MaxVel")==0) return MaxVelEnum;
	      else if (strcmp(name,"MaxVx")==0) return MaxVxEnum;
	      else if (strcmp(name,"MaxVy")==0) return MaxVyEnum;
	      else if (strcmp(name,"MaxVz")==0) return MaxVzEnum;
	      else if (strcmp(name,"Melange")==0) return MelangeEnum;
	      else if (strcmp(name,"MeltingAnalysis")==0) return MeltingAnalysisEnum;
	      else if (strcmp(name,"MeshElements")==0) return MeshElementsEnum;
	      else if (strcmp(name,"MeshX")==0) return MeshXEnum;
	      else if (strcmp(name,"MeshY")==0) return MeshYEnum;
	      else if (strcmp(name,"MinVel")==0) return MinVelEnum;
	      else if (strcmp(name,"MinVx")==0) return MinVxEnum;
	      else if (strcmp(name,"MinVy")==0) return MinVyEnum;
	      else if (strcmp(name,"MinVz")==0) return MinVzEnum;
	      else if (strcmp(name,"MismipFloatingMeltRate")==0) return MismipFloatingMeltRateEnum;
	      else if (strcmp(name,"Moulin")==0) return MoulinEnum;
	      else if (strcmp(name,"MpiDense")==0) return MpiDenseEnum;
	      else if (strcmp(name,"Mpi")==0) return MpiEnum;
	      else if (strcmp(name,"MpiSparse")==0) return MpiSparseEnum;
	      else if (strcmp(name,"Mumps")==0) return MumpsEnum;
	      else if (strcmp(name,"NoFrictionOnPartiallyFloating")==0) return NoFrictionOnPartiallyFloatingEnum;
	      else if (strcmp(name,"NoMeltOnPartiallyFloating")==0) return NoMeltOnPartiallyFloatingEnum;
	      else if (strcmp(name,"Nodal")==0) return NodalEnum;
	      else if (strcmp(name,"Nodalvalue")==0) return NodalvalueEnum;
	      else if (strcmp(name,"NodeSId")==0) return NodeSIdEnum;
	      else if (strcmp(name,"NoneApproximation")==0) return NoneApproximationEnum;
	      else if (strcmp(name,"None")==0) return NoneEnum;
	      else if (strcmp(name,"Numberedcostfunction")==0) return NumberedcostfunctionEnum;
	      else if (strcmp(name,"NyeCO2")==0) return NyeCO2Enum;
	      else if (strcmp(name,"NyeH2O")==0) return NyeH2OEnum;
	      else if (strcmp(name,"Numericalflux")==0) return NumericalfluxEnum;
	      else if (strcmp(name,"OceantransportAnalysis")==0) return OceantransportAnalysisEnum;
	      else if (strcmp(name,"OceantransportSolution")==0) return OceantransportSolutionEnum;
	      else if (strcmp(name,"OldGradient")==0) return OldGradientEnum;
	      else if (strcmp(name,"OneLayerP4z")==0) return OneLayerP4zEnum;
	      else if (strcmp(name,"Open")==0) return OpenEnum;
	      else if (strcmp(name,"Option")==0) return OptionEnum;
	      else if (strcmp(name,"Param")==0) return ParamEnum;
	      else if (strcmp(name,"Parameters")==0) return ParametersEnum;
	      else if (strcmp(name,"P0Array")==0) return P0ArrayEnum;
	      else if (strcmp(name,"P0DG")==0) return P0DGEnum;
	      else if (strcmp(name,"P1DG")==0) return P1DGEnum;
	      else if (strcmp(name,"P1P1")==0) return P1P1Enum;
	      else if (strcmp(name,"P1P1GLS")==0) return P1P1GLSEnum;
	      else if (strcmp(name,"P1bubble")==0) return P1bubbleEnum;
	      else if (strcmp(name,"P1bubblecondensed")==0) return P1bubblecondensedEnum;
	      else if (strcmp(name,"P1xP2")==0) return P1xP2Enum;
	      else if (strcmp(name,"P1xP3")==0) return P1xP3Enum;
	      else if (strcmp(name,"P1xP4")==0) return P1xP4Enum;
	      else if (strcmp(name,"P2")==0) return P2Enum;
	      else if (strcmp(name,"P2bubble")==0) return P2bubbleEnum;
	      else if (strcmp(name,"P2bubblecondensed")==0) return P2bubblecondensedEnum;
	      else if (strcmp(name,"P2xP1")==0) return P2xP1Enum;
	      else if (strcmp(name,"P2xP4")==0) return P2xP4Enum;
	      else if (strcmp(name,"Paterson")==0) return PatersonEnum;
	      else if (strcmp(name,"Pengrid")==0) return PengridEnum;
	      else if (strcmp(name,"Penpair")==0) return PenpairEnum;
         else stage=15;
   }
   if(stage==15){
	      if (strcmp(name,"Penta")==0) return PentaEnum;
	      else if (strcmp(name,"PentaInput")==0) return PentaInputEnum;
	      else if (strcmp(name,"Profiler")==0) return ProfilerEnum;
	      else if (strcmp(name,"ProfilingCurrentFlops")==0) return ProfilingCurrentFlopsEnum;
	      else if (strcmp(name,"ProfilingCurrentMem")==0) return ProfilingCurrentMemEnum;
	      else if (strcmp(name,"ProfilingSolutionTime")==0) return ProfilingSolutionTimeEnum;
	      else if (strcmp(name,"Regionaloutput")==0) return RegionaloutputEnum;
	      else if (strcmp(name,"Regular")==0) return RegularEnum;
	      else if (strcmp(name,"RecoveryAnalysis")==0) return RecoveryAnalysisEnum;
	      else if (strcmp(name,"Riftfront")==0) return RiftfrontEnum;
	      else if (strcmp(name,"SamplingAnalysis")==0) return SamplingAnalysisEnum;
	      else if (strcmp(name,"SamplingSolution")==0) return SamplingSolutionEnum;
	      else if (strcmp(name,"SIAApproximation")==0) return SIAApproximationEnum;
	      else if (strcmp(name,"SMBarma")==0) return SMBarmaEnum;
	      else if (strcmp(name,"SMBcomponents")==0) return SMBcomponentsEnum;
	      else if (strcmp(name,"SMBdebrisEvatt")==0) return SMBdebrisEvattEnum;
	      else if (strcmp(name,"SMBd18opdd")==0) return SMBd18opddEnum;
	      else if (strcmp(name,"SMBforcing")==0) return SMBforcingEnum;
	      else if (strcmp(name,"SMBgcm")==0) return SMBgcmEnum;
	      else if (strcmp(name,"SMBgemb")==0) return SMBgembEnum;
	      else if (strcmp(name,"SMBgradients")==0) return SMBgradientsEnum;
	      else if (strcmp(name,"SMBgradientscomponents")==0) return SMBgradientscomponentsEnum;
	      else if (strcmp(name,"SMBgradientsela")==0) return SMBgradientselaEnum;
	      else if (strcmp(name,"SMBhenning")==0) return SMBhenningEnum;
	      else if (strcmp(name,"SMBmeltcomponents")==0) return SMBmeltcomponentsEnum;
	      else if (strcmp(name,"SMBpdd")==0) return SMBpddEnum;
	      else if (strcmp(name,"SMBpddSicopolis")==0) return SMBpddSicopolisEnum;
	      else if (strcmp(name,"SMBsemic")==0) return SMBsemicEnum;
	      else if (strcmp(name,"SSAApproximation")==0) return SSAApproximationEnum;
	      else if (strcmp(name,"SSAFSApproximation")==0) return SSAFSApproximationEnum;
	      else if (strcmp(name,"SSAHOApproximation")==0) return SSAHOApproximationEnum;
	      else if (strcmp(name,"Scaled")==0) return ScaledEnum;
	      else if (strcmp(name,"SealevelAbsolute")==0) return SealevelAbsoluteEnum;
	      else if (strcmp(name,"SealevelEmotion")==0) return SealevelEmotionEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionX")==0) return SealevelchangePolarMotionXEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionY")==0) return SealevelchangePolarMotionYEnum;
	      else if (strcmp(name,"SealevelchangePolarMotionZ")==0) return SealevelchangePolarMotionZEnum;
	      else if (strcmp(name,"SealevelchangePolarMotion")==0) return SealevelchangePolarMotionEnum;
	      else if (strcmp(name,"SealevelNmotion")==0) return SealevelNmotionEnum;
	      else if (strcmp(name,"SealevelUmotion")==0) return SealevelUmotionEnum;
	      else if (strcmp(name,"SealevelchangeAnalysis")==0) return SealevelchangeAnalysisEnum;
	      else if (strcmp(name,"Seg")==0) return SegEnum;
	      else if (strcmp(name,"SegInput")==0) return SegInputEnum;
	      else if (strcmp(name,"Segment")==0) return SegmentEnum;
	      else if (strcmp(name,"SegmentRiftfront")==0) return SegmentRiftfrontEnum;
	      else if (strcmp(name,"Separate")==0) return SeparateEnum;
	      else if (strcmp(name,"Seq")==0) return SeqEnum;
	      else if (strcmp(name,"SmbAnalysis")==0) return SmbAnalysisEnum;
	      else if (strcmp(name,"SmbSolution")==0) return SmbSolutionEnum;
	      else if (strcmp(name,"SmoothAnalysis")==0) return SmoothAnalysisEnum;
	      else if (strcmp(name,"SoftMigration")==0) return SoftMigrationEnum;
	      else if (strcmp(name,"SpatialLinearFloatingMeltRate")==0) return SpatialLinearFloatingMeltRateEnum;
	      else if (strcmp(name,"SpcDynamic")==0) return SpcDynamicEnum;
	      else if (strcmp(name,"SpcStatic")==0) return SpcStaticEnum;
	      else if (strcmp(name,"SpcTransient")==0) return SpcTransientEnum;
	      else if (strcmp(name,"Sset")==0) return SsetEnum;
	      else if (strcmp(name,"StatisticsSolution")==0) return StatisticsSolutionEnum;
	      else if (strcmp(name,"SteadystateSolution")==0) return SteadystateSolutionEnum;
	      else if (strcmp(name,"StressIntensityFactor")==0) return StressIntensityFactorEnum;
	      else if (strcmp(name,"StressbalanceAnalysis")==0) return StressbalanceAnalysisEnum;
	      else if (strcmp(name,"StressbalanceConvergenceNumSteps")==0) return StressbalanceConvergenceNumStepsEnum;
	      else if (strcmp(name,"StressbalanceSIAAnalysis")==0) return StressbalanceSIAAnalysisEnum;
	      else if (strcmp(name,"StressbalanceSolution")==0) return StressbalanceSolutionEnum;
	      else if (strcmp(name,"StressbalanceVerticalAnalysis")==0) return StressbalanceVerticalAnalysisEnum;
	      else if (strcmp(name,"StringArrayParam")==0) return StringArrayParamEnum;
	      else if (strcmp(name,"StringExternalResult")==0) return StringExternalResultEnum;
	      else if (strcmp(name,"StringParam")==0) return StringParamEnum;
	      else if (strcmp(name,"SubelementFriction1")==0) return SubelementFriction1Enum;
	      else if (strcmp(name,"SubelementFriction2")==0) return SubelementFriction2Enum;
	      else if (strcmp(name,"IntrusionMelt")==0) return IntrusionMeltEnum;
	      else if (strcmp(name,"SubelementMelt1")==0) return SubelementMelt1Enum;
	      else if (strcmp(name,"SubelementMelt2")==0) return SubelementMelt2Enum;
	      else if (strcmp(name,"SubelementMigration")==0) return SubelementMigrationEnum;
	      else if (strcmp(name,"SurfaceSlopeSolution")==0) return SurfaceSlopeSolutionEnum;
	      else if (strcmp(name,"TaylorHood")==0) return TaylorHoodEnum;
	      else if (strcmp(name,"Tetra")==0) return TetraEnum;
	      else if (strcmp(name,"TetraInput")==0) return TetraInputEnum;
	      else if (strcmp(name,"ThermalAnalysis")==0) return ThermalAnalysisEnum;
	      else if (strcmp(name,"ThermalSolution")==0) return ThermalSolutionEnum;
	      else if (strcmp(name,"ThicknessErrorEstimator")==0) return ThicknessErrorEstimatorEnum;
	      else if (strcmp(name,"TotalCalvingFluxLevelset")==0) return TotalCalvingFluxLevelsetEnum;
	      else if (strcmp(name,"TotalCalvingMeltingFluxLevelset")==0) return TotalCalvingMeltingFluxLevelsetEnum;
	      else if (strcmp(name,"TotalFloatingBmb")==0) return TotalFloatingBmbEnum;
	      else if (strcmp(name,"TotalFloatingBmbScaled")==0) return TotalFloatingBmbScaledEnum;
	      else if (strcmp(name,"TotalGroundedBmb")==0) return TotalGroundedBmbEnum;
	      else if (strcmp(name,"TotalGroundedBmbScaled")==0) return TotalGroundedBmbScaledEnum;
	      else if (strcmp(name,"TotalSmb")==0) return TotalSmbEnum;
	      else if (strcmp(name,"TotalSmbScaled")==0) return TotalSmbScaledEnum;
	      else if (strcmp(name,"TotalSmbRefreeze")==0) return TotalSmbRefreezeEnum;
	      else if (strcmp(name,"TotalSmbMelt")==0) return TotalSmbMeltEnum;
	      else if (strcmp(name,"TransientArrayParam")==0) return TransientArrayParamEnum;
	      else if (strcmp(name,"TransientInput")==0) return TransientInputEnum;
	      else if (strcmp(name,"TransientParam")==0) return TransientParamEnum;
	      else if (strcmp(name,"TransientSolution")==0) return TransientSolutionEnum;
	      else if (strcmp(name,"Tria")==0) return TriaEnum;
	      else if (strcmp(name,"TriaInput")==0) return TriaInputEnum;
	      else if (strcmp(name,"UzawaPressureAnalysis")==0) return UzawaPressureAnalysisEnum;
	      else if (strcmp(name,"VectorParam")==0) return VectorParamEnum;
	      else if (strcmp(name,"Vertex")==0) return VertexEnum;
	      else if (strcmp(name,"VertexLId")==0) return VertexLIdEnum;
	      else if (strcmp(name,"VertexPId")==0) return VertexPIdEnum;
	      else if (strcmp(name,"VertexSId")==0) return VertexSIdEnum;
	      else if (strcmp(name,"Vertices")==0) return VerticesEnum;
	      else if (strcmp(name,"ViscousHeating")==0) return ViscousHeatingEnum;
	      else if (strcmp(name,"Water")==0) return WaterEnum;
	      else if (strcmp(name,"XTaylorHood")==0) return XTaylorHoodEnum;
	      else if (strcmp(name,"XY")==0) return XYEnum;
	      else if (strcmp(name,"XYZ")==0) return XYZEnum;
	      else if (strcmp(name,"BalancethicknessD0")==0) return BalancethicknessD0Enum;
	      else if (strcmp(name,"BalancethicknessDiffusionCoefficient")==0) return BalancethicknessDiffusionCoefficientEnum;
	      else if (strcmp(name,"BilinearInterp")==0) return BilinearInterpEnum;
	      else if (strcmp(name,"CalvingdevCoeff")==0) return CalvingdevCoeffEnum;
	      else if (strcmp(name,"DeviatoricStress")==0) return DeviatoricStressEnum;
	      else if (strcmp(name,"EtaAbsGradient")==0) return EtaAbsGradientEnum;
	      else if (strcmp(name,"MeshZ")==0) return MeshZEnum;
	      else if (strcmp(name,"NearestInterp")==0) return NearestInterpEnum;
	      else if (strcmp(name,"OutputdefinitionList")==0) return OutputdefinitionListEnum;
	      else if (strcmp(name,"SealevelObs")==0) return SealevelObsEnum;
	      else if (strcmp(name,"SealevelWeights")==0) return SealevelWeightsEnum;
	      else if (strcmp(name,"StrainRate")==0) return StrainRateEnum;
         else stage=16;
   }
   if(stage==16){
	      if (strcmp(name,"StressTensor")==0) return StressTensorEnum;
	      else if (strcmp(name,"StressbalanceViscosityOvershoot")==0) return StressbalanceViscosityOvershootEnum;
	      else if (strcmp(name,"SubelementMigration4")==0) return SubelementMigration4Enum;
	      else if (strcmp(name,"TimesteppingTimeAdapt")==0) return TimesteppingTimeAdaptEnum;
	      else if (strcmp(name,"TriangleInterp")==0) return TriangleInterpEnum;
	      else if (strcmp(name,"MaximumNumberOfDefinitions")==0) return MaximumNumberOfDefinitionsEnum;
         else stage=17;
   }
	/*If we reach this point, the string provided has not been found*/
	if(notfounderror)
		_error_("Enum " << name << " not found");
	else
		return -1;
}
